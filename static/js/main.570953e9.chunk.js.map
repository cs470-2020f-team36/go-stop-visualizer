{"version":3,"sources":["actions.ts","socket.ts","utils/server.ts","components/IconButton.tsx","components/Layout.tsx","components/Header.tsx","components/Table.tsx","hooks/index.ts","utils/card.ts","types/game.ts","utils/number.ts","utils/game.ts","utils/string.ts","components/CardButton.tsx","components/TextButton.tsx","components/GoStop.tsx","components/RoomGameStarted.tsx","components/TextInput.tsx","components/HeaderContents.tsx","pages/Rooms.tsx","pages/Main.tsx","utils/test.ts","pages/NotFound.tsx","i18n.ts","pages/Estimate.tsx","App.tsx","reportWebVitals.ts","store.ts","index.tsx"],"names":["actions","store","updateClientId","state","clientId","localStorage","setItem","updateRooms","rooms","updateRoomId","roomId","updateGame","game","estimate","socket","io","emitToServer","id","data","a","emit","getServerResponse","Promise","resolve","once","attachServerListener","cb","on","removeServerListener","off","mapIconBaseSize","sm","base","lg","IconButton","props","size","dark","restProps","className","Layout","children","Header","style","Table","Wrapper","Head","Body","Row","Data","goToMyRoom","onlyIfGameStarted","history","addToast","find","room","gameStarted","push","appearance","autoDismiss","client","myRoomMessage","success","result","error","cardToImageSrc","card","startsWith","cardNameKo","parseInt","substring","month","ribbon","includes","index","multiple","getMonthName","ALL_ACTIONS","kind","option","match","roundFloat","f","Math","round","floor","padEnd","hiddenHand","player","peep","board","hands","len","length","shown","filter","shaking_histories","flat","Array","fill","actionNameKo","action","actionNameEn","postprocessPolicy","policyBefore","language","policy_","map","v","i","sort","b","policy","capitalize","s","charAt","toUpperCase","slice","CardButton","anchorBottom","hoverEnabled","title","alt","src","borderRadius","xs","xl","TextButton","GameEnded","name","involved","players","useToasts","t","useTranslation","backgroundColor","winner","process","scores","arg","go_histories","score_factors","factor","pow","x","join","onClick","endGameMessage","startGameMessage","GoStopField","i18n","BASE_WIDTH","BASE_HEIGHT","windowSize","useState","width","height","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","ratio","min","bottom","top","padding","left","prob","marginTop","fontSize","maxWidth","hand","turn","captureField","capture_fields","animal9Moved","animal_9_moved","score","go","stacking","stacking_histories","shaking","centerField","center_field","mine","GoStopNameCard","name_","avatar","marginRight","lineHeight","textAlign","position","GoStopScoreCard","marginLeft","fontFamily","whiteSpace","transform","GoStopCard","w","h","objectPosition","objectFit","GoStopHand","gap","color","minWidth","undefined","margin","playMessage","GoStopCaptureField","brightCards","animalCards","isGodoriMade","animalScore","max","ribbonCards","isRedRibbonMade","isPlantRibbonMade","isBlueRibbonMade","ribbonScore","junkCards","junkScore","reduce","pile","sizeOfChunk","number","isScore","GoStopCaptureFieldPile","horizontalGap","verticalGap","numberOfChunks","ceil","wrapperWidth","wrapperHeight","last","border","fontWeight","GoStopCenterField","field","GoStopCenterFieldItem","gapRatio","GoStop","routeComponentProps","ended","connect","listener","message","isMyTurn","showLogs","setShowLogs","showDialog","setShowDialog","dialogContent","setDialogContent","setPeep","useAsyncEffect","Object","values","flags","some","cursor","select_match","move_animal_9","four_of_a_month","findIndex","p","zIndex","params","singlePlayer","changeLanguage","serializedGame","dataString","encodeURIComponent","JSON","stringify","downloadAnchorNode","document","createElement","setAttribute","Date","toISOString","body","appendChild","click","remove","right","logs","TextInput","HeaderContents","placeholder","value","onChange","event","target","location","exitRoomMessage","replace","joinRoomMessage","colSpan","to","newRoomId","assert","condition","errorMessage","Error","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","format","lng","monthName","cardNameEn","escapeValue","CodeEditor","defaultValue","React","useRef","contentEditable","minHeight","maxHeight","onInput","e","innerHTML","dangerouslySetInnerHTML","__html","current","setEstimate","content","setContent","xmlns","viewBox","fillRule","cx","cy","r","stroke","strokeWidth","parse","estimateGameResult","parseFloat","m","toString","padStart","forEach","slug","Image","welcomeMessage","split","console","info","connected","getItem","listRoomsListener","path","component","Rooms","render","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","ReactDOM","getElementById"],"mappings":"2UAmEeA,EAjB0C,SAACC,GAAD,MAAY,CACnEC,eA5CiD,SACjDC,EACAC,GAGA,OADAC,aAAaC,QAAQ,WAAYF,GAC1B,CAAEA,aAwCTG,YAtC8C,SAC9CJ,EACAK,GAEA,MAAO,CAAEA,UAmCTC,aAjC+C,SAC/CN,EACAO,GAEA,MAAO,CAAEA,WA8BTC,WA5B6C,SAC7CR,EACAS,GACI,IAAD,IACH,MAAO,CACLA,KACW,OAATA,EACI,KADJ,2BAGSA,GAHT,IAIMC,SAAQ,UAAED,EAAKC,gBAAP,kBAAmBV,EAAMS,YAAzB,aAAmB,EAAYC,e,QC/BtCC,E,MAASC,GADH,wCCCZ,SAAeC,EAAtB,oC,4CAAO,WACLC,EACAC,GAFK,SAAAC,EAAA,sDAILL,EAAOM,KAAKH,EAAIC,GAJX,4C,sBAOA,SAAeG,EAAtB,kC,4CAAO,WACLJ,GADK,SAAAE,EAAA,+EAGE,IAAIG,SAAQ,SAACC,GAClBT,EAAOU,KAAKP,GAAI,SAACC,GACfK,EAAQL,UALP,4C,sBAUA,SAASO,EACdR,EACAS,GAEAZ,EAAOa,GAAGV,EAAIS,GAGT,SAASE,EACdX,EACAS,GAEAZ,EAAOe,IAAIZ,EAAIS,G,oBC7BXI,EAAkB,CACtBC,GAAI,UACJC,KAAM,WACNC,GAAI,YA6BSC,EAlB+B,SAACC,GAAW,IAAD,IACDA,EAA9CC,YAD+C,MACxC,OADwC,IACDD,EAA/BE,YADgC,SACfC,EADe,YACDH,EADC,iBAEvD,OACE,kDACMG,GADN,IAEEC,UAAS,+LAEmCT,EAAgBM,GAFnD,sBAGPD,EAAMI,iBAHC,QAGY,GAHZ,YAKPF,EACI,wDACA,mE,gBCtBGG,EANU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,qBAAKF,UAAU,kDAAf,SACE,sBAAKA,UAAU,yCAAf,UAAyDE,EAAzD,UCOWC,EAT2C,SAAC,GAAD,IACxDD,EADwD,EACxDA,SACAE,EAFwD,EAExDA,MAFwD,OAIxD,wBAAQJ,UAAU,MAAMI,MAAOA,EAA/B,SACGF,KCkDUG,EATD,CACZC,QA7CwB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,OACxB,qBAAKF,UAAU,+EAAf,SACE,uBAAOA,UAAU,uFAAjB,SACGE,OA2CLK,KAvCqB,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAH,OAAkB,gCAAQA,KAwC/CM,KAvCqB,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAH,OAAkB,gCAAQA,KAwC/CO,IApCG,SAAC,GAAD,MAAGP,EAAH,EAAGA,SAAaN,EAAhB,mCACH,8CAAQA,GAAR,IAAeI,UAAS,8BAAeJ,EAAMI,iBAArB,QAAkC,IAA1D,SACGE,MAmCHQ,KA7BG,SAAC,GAAD,MAAGR,EAAH,EAAGA,SAAaN,EAAhB,mCACH,8CACMA,GADN,IAEEI,UAAS,2DACPJ,EAAMI,iBADC,QACY,IAHvB,SAMGE,MAuBHC,OAjBG,SAAC,GAAD,MAAGD,EAAH,EAAGA,SAAaN,EAAhB,mCACH,8CACMA,GADN,IAEEI,UAAS,8FACPJ,EAAMI,iBADC,QACY,IAHvB,SAMGE,O,yDC/BQS,EAAa,SAAC,EAEzBC,GAFwB,IACtBC,EADsB,EACtBA,QAAShD,EADa,EACbA,SAAUM,EADG,EACHA,OAAQF,EADL,EACKA,MAAOC,EADZ,EACYA,aAAc4C,EAD1B,EAC0BA,SAD1B,6BAGrB,wCAAAlC,EAAA,0DACCT,KAAM,OAAIF,QAAJ,IAAIA,GAAJ,UAAIA,EAAO8C,MAAK,SAACC,GAAD,OAAUA,EAAKtC,KAAOP,YAAtC,aAAI,EAA2C8C,aADtD,uBAEDJ,EAAQK,KAAR,iBAAuB/C,IACvB2C,EAAS,4BAA6B,CACpCK,WAAY,OACZC,aAAa,IALd,6BAUEvD,EAVF,wDAYHY,EAAa,UAAW,CAAE4C,OAAQxD,IAZ/B,SAcyBiB,EAAkB,oBAd3C,QAcGwC,EAdH,QAeeC,SAChBrD,EAAY,oBAACoD,EAAcE,cAAf,aAAC,EAAsB9C,UAAvB,QAA6B,QAGvC,UAAA4C,EAAcE,cAAd,eAAsB9C,OACrB,UAAA4C,EAAcE,cAAd,eAAsBP,cAAgBL,GAEvCC,EAAQK,KAAR,2BAAuBI,EAAcE,cAArC,aAAuB,EAAsB9C,MAG/CoC,EAASQ,EAAcG,MAAO,CAC5BN,WAAY,OACZC,aAAa,IA3Bd,6CCbE,SAASM,EAAeC,GAC7B,MAAM,iBAAN,OACEA,EAAKC,WAAW,KACZ,SACAD,EAAKC,WAAW,KAChB,OACAD,EAAKC,WAAW,KAAhB,eACQD,EAAK,IACbA,EAPN,QAYK,SAASE,EAAWF,GACzB,GAAIA,EAAKC,WAAW,KAClB,MAAM,GAAN,OAAUE,SAASH,EAAKI,UAAU,IAAlC,iBAEF,GAAIJ,EAAKC,WAAW,KAClB,MAAM,GAAN,OAAUE,SAASH,EAAKI,UAAU,IAAlC,uBAEF,GAAIJ,EAAKC,WAAW,KAAM,CACxB,IAAMI,EAAQF,SAASH,EAAKI,UAAU,IAChCE,EAAS,CAAC,EAAG,EAAG,GAAGC,SAASF,GAC9B,SACA,CAAC,EAAG,EAAG,GAAGE,SAASF,GACnB,SACA,CAAC,EAAG,EAAG,IAAIE,SAASF,GACpB,SACA,KACJ,MAAM,GAAN,OAAUA,EAAV,wBAAsBC,EAAD,YAAoBA,EAApB,WAAU,IAEjC,GAAIN,EAAKC,WAAW,KAAM,CACxB,IAAMI,EAAQF,SAASH,EAAKI,UAAU,EAAG,IACnCI,EAAQL,SAASH,EAAKI,UAAU,IAChCK,EAAqB,IAAVD,GAAyB,KAAVH,EAAe,EAAI,EACnD,MAAM,GAAN,OAAUA,EAAV,kBAAiC,IAAbI,EAAiB,SAAM,GAA3C,iBACe,IAAbA,EAAiB,GAAjB,YAA2BD,EAA3B,MAGJ,GAAIR,EAAKC,WAAW,KAAM,CACxB,IAAMQ,EAAWN,SAASH,EAAKI,UAAU,IACzC,MAAM,sBAAN,OAA2B,IAAbK,EAAiB,SAAM,eAArC,UAEF,GAAIT,EAAKC,WAAW,KAAM,CACxB,IAAMO,EAAQL,SAASH,EAAKI,UAAU,IACtC,MAAM,iBAAN,OAAcI,EAAd,KAEF,MAAO,4BAIF,SAASE,EAAaL,GAe3B,MAde,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEYA,EAAQ,GC0LjB,IAAMM,EAA4B,CACvC,CAAEC,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,QACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KAAM,QAASZ,KAAM,OACvB,CAAEY,KA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","file":"static/js/main.570953e9.chunk.js","sourcesContent":["// redux-zero actions\n\nimport Store from \"redux-zero/interfaces/Store\";\nimport { AppState } from \"./store\";\nimport { Game } from \"./types/game\";\nimport { Room } from \"./types/server\";\n\nconst updateClientId = (store: Store<AppState>) => (\n  state: AppState,\n  clientId: string\n) => {\n  localStorage.setItem(\"clientId\", clientId);\n  return { clientId } as Partial<AppState>;\n};\nconst updateRooms = (store: Store<AppState>) => (\n  state: AppState,\n  rooms: Room[]\n) => {\n  return { rooms } as Partial<AppState>;\n};\nconst updateRoomId = (store: Store<AppState>) => (\n  state: AppState,\n  roomId: string | null\n) => {\n  return { roomId } as Partial<AppState>;\n};\nconst updateGame = (store: Store<AppState>) => (\n  state: AppState,\n  game: Game | null\n) => {\n  return {\n    game:\n      game === null\n        ? null\n        : {\n            ...game,\n            estimate: game.estimate ?? state.game?.estimate,\n          },\n  } as Partial<AppState>;\n};\ntype Voidify<T> = T extends (...params: infer R) => unknown\n  ? (...params: R) => void\n  : never;\ntype ActionsType = {\n  updateClientId: Voidify<ReturnType<typeof updateClientId>>;\n  updateRooms: Voidify<ReturnType<typeof updateRooms>>;\n  updateRoomId: Voidify<ReturnType<typeof updateRoomId>>;\n  updateGame: Voidify<ReturnType<typeof updateGame>>;\n};\n\nconst actions: (store: Store<AppState>) => ActionsType = (store) => ({\n  updateClientId: updateClientId(store),\n  updateRooms: updateRooms(store),\n  updateRoomId: updateRoomId(store),\n  updateGame: updateGame(store),\n});\n\ntype ConsumeState<T> = T extends (g: any, ...args: infer V) => infer W\n  ? (...args: V) => W\n  : unknown;\n\nexport type ActionTypes = {\n  [key in keyof ReturnType<typeof actions>]: ConsumeState<\n    ReturnType<typeof actions>[key]\n  >;\n};\n\nexport default actions;\n","// return a socket object\n\nimport io from \"socket.io-client\";\n\nconst SERVER_URL = \"https://cs470-go-stop.herokuapp.com/\";\nexport const socket = io(SERVER_URL);\n","// async functions that do something with the server\n\nimport { socket } from \"../socket\";\nimport { Message, Result } from \"../types/server\";\n\nexport async function emitToServer<T extends keyof Message>(\n  id: T,\n  data: Message[T]\n) {\n  socket.emit(id, data);\n}\n\nexport async function getServerResponse<T extends keyof Message>(\n  id: T\n): Promise<Result<Message[T]>> {\n  return new Promise((resolve) => {\n    socket.once(id, (data: Result<Message[T]>) => {\n      resolve(data);\n    });\n  });\n}\n\nexport function attachServerListener<T extends keyof Message>(\n  id: T,\n  cb: (data: Result<Message[T]>) => void\n) {\n  socket.on(id, cb);\n}\n\nexport function removeServerListener<T extends keyof Message>(\n  id: T,\n  cb?: (data: Result<Message[T]>) => void\n) {\n  socket.off(id, cb);\n}\n","// buttons with an icon in it\n\nimport React from \"react\";\n\nconst mapIconBaseSize = {\n  sm: \"text-xl\",\n  base: \"text-2xl\",\n  lg: \"text-4xl\",\n};\n\ntype IconButtonProps = {\n  size?: keyof typeof mapIconBaseSize;\n  dark?: boolean;\n  onClick?: React.MouseEventHandler;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nconst IconButton: React.FC<IconButtonProps> = (props) => {\n  const { size = \"base\", dark = false, ...restProps } = props;\n  return (\n    <button\n      {...restProps}\n      className={`flex items-center justify-center p-3 rounded-full\n        disabled:bg-transparent disabled:opacity-50 disabled:cursor-not-allowed \n        focus:outline-none focus:shadow-outline ${mapIconBaseSize[size]} ${\n        props.className ?? \"\"\n      } ${\n        dark\n          ? \"text-white bg-opacity-15 hover:bg-opacity-35 bg-white\"\n          : \"bg-opacity-25 hover:bg-opacity-50 text-gray-800 bg-gray-400\"\n      }`}\n    />\n  );\n};\n\nexport default IconButton;\n","import React from \"react\";\n\nconst Layout: React.FC = ({ children }) => (\n  <div className=\"w-full bg-gray-200 min-h-full overflow-x-hidden\">\n    <div className=\"max-w-4xl mx-auto text-gray-900 h-full\">{children} </div>\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\n\nconst Header: React.FC<{ style?: React.CSSProperties }> = ({\n  children,\n  style,\n}) => (\n  <header className=\"p-4\" style={style}>\n    {children}\n  </header>\n);\n\nexport default Header;\n","// Table component for rendering room/user list\n\nimport React from \"react\";\n\nconst Wrapper: React.FC = ({ children }) => (\n  <div className=\"overflow-x-auto bg-white rounded-lg shadow max-w-4xl m-auto box-content mx-4\">\n    <table className=\"border-collapse table-auto w-full whitespace-no-wrap bg-white table-striped relative\">\n      {children}\n    </table>\n  </div>\n);\nconst Head: React.FC = ({ children }) => <thead>{children}</thead>;\nconst Body: React.FC = ({ children }) => <tbody>{children}</tbody>;\nconst Row: React.FC<React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLTableRowElement>,\n  HTMLTableRowElement\n>> = ({ children, ...props }) => (\n  <tr {...props} className={`text-left ${props.className ?? \"\"}`}>\n    {children}\n  </tr>\n);\nconst Data: React.FC<React.DetailedHTMLProps<\n  React.TdHTMLAttributes<HTMLTableDataCellElement>,\n  HTMLTableDataCellElement\n>> = ({ children, ...props }) => (\n  <td\n    {...props}\n    className={`border-dashed border-t border-gray-200 ${\n      props.className ?? \"\"\n    }`}\n  >\n    {children}\n  </td>\n);\nconst Header: React.FC<React.DetailedHTMLProps<\n  React.ThHTMLAttributes<HTMLTableHeaderCellElement>,\n  HTMLTableHeaderCellElement\n>> = ({ children, ...props }) => (\n  <th\n    {...props}\n    className={`py-2 px-3 sticky top-0 border-b text-gray-700 border-gray-200 bg-gray-100 ${\n      props.className ?? \"\"\n    }`}\n  >\n    {children}\n  </th>\n);\n\nconst Table = {\n  Wrapper,\n  Head,\n  Body,\n  Row,\n  Data,\n  Header,\n};\n\nexport default Table;\n","import { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { AddToast } from \"react-toast-notifications\";\nimport { ActionTypes } from \"../actions\";\nimport { AppState } from \"../store\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\n\ntype GoToMyRoomProps = Pick<RouteComponentProps, \"history\"> &\n  Pick<AppState, \"clientId\" | \"roomId\" | \"rooms\"> &\n  Pick<ActionTypes, \"updateRoomId\"> & {\n    addToast: AddToast\n  };\n\nexport const goToMyRoom = (\n  { history, clientId, roomId, rooms, updateRoomId, addToast }: GoToMyRoomProps,\n  onlyIfGameStarted: boolean\n) => async () => {\n  if (roomId && rooms?.find((room) => room.id === roomId)?.gameStarted) {\n    history.push(`/rooms/${roomId}`);\n    addToast(\"There is a game going on.\", {\n      appearance: \"info\",\n      autoDismiss: true,\n    });\n    return;\n  }\n\n  if (!clientId) return;\n\n  emitToServer(\"my room\", { client: clientId });\n\n  const myRoomMessage = await getServerResponse(\"my room response\");\n  if (myRoomMessage.success) {\n    updateRoomId(myRoomMessage.result?.id ?? null);\n\n    if (\n      myRoomMessage.result?.id &&\n      (myRoomMessage.result?.gameStarted || !onlyIfGameStarted)\n    ) {\n      history.push(`/rooms/${myRoomMessage.result?.id}`);\n    }\n  } else {\n    addToast(myRoomMessage.error, {\n      appearance: \"info\",\n      autoDismiss: true,\n    });\n  }\n};\n\nexport function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: 32,\n    height: 32,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n}\n","import { Card } from \"../types/game\";\n\n// return the image src of a card\nexport function cardToImageSrc(card: Card) {\n  return `/images/cards/${\n    card.startsWith(\"?\")\n      ? \"hidden\"\n      : card.startsWith(\"*\")\n      ? \"bomb\"\n      : card.startsWith(\"+\")\n      ? `bonus${card[1]}`\n      : card\n  }.png`;\n}\n\n// return the name of a card in korean\nexport function cardNameKo(card: Card) {\n  if (card.startsWith(\"B\")) {\n    return `${parseInt(card.substring(1))}월 광`;\n  }\n  if (card.startsWith(\"A\")) {\n    return `${parseInt(card.substring(1))}월 열끗`;\n  }\n  if (card.startsWith(\"R\")) {\n    const month = parseInt(card.substring(1));\n    const ribbon = [1, 2, 3].includes(month)\n      ? \"홍\"\n      : [4, 5, 7].includes(month)\n      ? \"초\"\n      : [6, 9, 10].includes(month)\n      ? \"청\"\n      : null;\n    return `${month}월 띠${!ribbon ? \"\" : ` (${ribbon}단)`}`;\n  }\n  if (card.startsWith(\"J\")) {\n    const month = parseInt(card.substring(1, 3));\n    const index = parseInt(card.substring(3));\n    const multiple = index === 2 || month === 12 ? 2 : 1;\n    return `${month}월 ${multiple === 2 ? \"쌍\" : \"\"}피${\n      multiple === 2 ? \"\" : ` (${index})`\n    }`;\n  }\n  if (card.startsWith(\"+\")) {\n    const multiple = parseInt(card.substring(1));\n    return `보너스 ${multiple === 2 ? \"쌍\" : \"쓰리\"}피`;\n  }\n  if (card.startsWith(\"*\")) {\n    const index = parseInt(card.substring(1));\n    return `폭탄 (${index})`;\n  }\n  return \"숨겨진 패\";\n}\n\n// return the name of month in english\nexport function getMonthName(month: number) {\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  return months[month - 1];\n}\n\n// return the name of a card in english\nexport function cardNameEn(card: Card) {\n  const month = parseInt(card.substring(1, 3));\n  const monthName = getMonthName(month);\n\n  if (card.startsWith(\"B\")) {\n    return `bright of ${monthName}`;\n  }\n  if (card.startsWith(\"A\")) {\n    return `animal of ${monthName}`;\n  }\n  if (card.startsWith(\"R\")) {\n    const ribbon = [1, 2, 3].includes(month)\n      ? \"red\"\n      : [4, 5, 7].includes(month)\n      ? \"blue\"\n      : [6, 9, 10].includes(month)\n      ? \"plant\"\n      : null;\n    return `ribbon of ${monthName}${!ribbon ? \"\" : ` (${ribbon})`}`;\n  }\n  if (card.startsWith(\"J\")) {\n    const month = parseInt(card.substring(1, 3));\n    const index = parseInt(card.substring(3));\n    const multiple = index === 2 || month === 12 ? 2 : 1;\n    return `${multiple === 2 ? \"double \" : \"\"}junk of ${monthName}${\n      multiple === 2 ? \"\" : ` (${index})`\n    }`;\n  }\n  if (card.startsWith(\"+\")) {\n    const multiple = parseInt(card.substring(1));\n    return `bonus card (${multiple === 2 ? \"+2\" : \"+3\"})`;\n  }\n  if (card.startsWith(\"*\")) {\n    const index = parseInt(card.substring(1));\n    return `bomb card (${index})`;\n  }\n  return \"hidden card\";\n}\n","export type Card =\n  | \"B01\"\n  | \"B03\"\n  | \"B08\"\n  | \"B11\"\n  | \"B12\"\n  | \"A02\"\n  | \"A04\"\n  | \"A05\"\n  | \"A06\"\n  | \"A07\"\n  | \"A08\"\n  | \"A09\"\n  | \"A10\"\n  | \"A12\"\n  | \"R01\"\n  | \"R02\"\n  | \"R03\"\n  | \"R04\"\n  | \"R05\"\n  | \"R06\"\n  | \"R07\"\n  | \"R09\"\n  | \"R10\"\n  | \"R12\"\n  | \"J010\"\n  | \"J011\"\n  | \"J020\"\n  | \"J021\"\n  | \"J030\"\n  | \"J031\"\n  | \"J040\"\n  | \"J041\"\n  | \"J050\"\n  | \"J051\"\n  | \"J060\"\n  | \"J061\"\n  | \"J070\"\n  | \"J071\"\n  | \"J080\"\n  | \"J081\"\n  | \"J090\"\n  | \"J091\"\n  | \"J100\"\n  | \"J101\"\n  | \"J110\"\n  | \"J111\"\n  | \"J112\"\n  | \"J120\"\n  | \"+2\"\n  | \"+3\"\n  | \"?\"\n  | \"*0\"\n  | \"*1\"\n  | \"*2\"\n  | \"*3\"\n  | \"*4\"\n  | \"*5\"\n  | \"*6\"\n  | \"*7\"\n  | \"*8\"\n  | \"*9\"\n  | \"*10\"\n  | \"*11\";\nexport type CardList = Card[];\n\nexport interface GameBoard {\n  hands: [CardList, CardList];\n  capture_fields: [CardList, CardList];\n  center_field: {\n    \"1\"?: CardList;\n    \"2\"?: CardList;\n    \"3\"?: CardList;\n    \"4\"?: CardList;\n    \"5\"?: CardList;\n    \"6\"?: CardList;\n    \"7\"?: CardList;\n    \"8\"?: CardList;\n    \"9\"?: CardList;\n    \"10\"?: CardList;\n    \"11\"?: CardList;\n    \"12\"?: CardList;\n  };\n  drawing_pile: CardList;\n}\n\nexport type SelectMatch = [\n  Card,\n  CardList,\n  [Card | null, CardList, Card, CardList, number] | null\n];\n\n// TODO: strict type def\ntype ScoreFactor =\n  | ScoreFactorBright\n  | ScoreFactorAnimal\n  | ScoreFactorRibbon\n  | ScoreFactorJunk\n  | ScoreFactorFiveBirds\n  | ScoreFactorBlueRibbons\n  | ScoreFactorRedRibbons\n  | ScoreFactorPlantRibbons\n  | ScoreFactorFourOfAMonth\n  | ScoreFactorThreeStackings\n  | ScoreFactorGo\n  | ScoreFactorShaking\n  | ScoreFactorBrightPenalty\n  | ScoreFactorAnimalPenalty\n  | ScoreFactorJunkPenalty\n  | ScoreFactorGoPenalty;\ninterface ScoreFactorBright {\n  kind: \"bright\";\n  arg: number;\n}\ninterface ScoreFactorAnimal {\n  kind: \"animal\";\n  arg: number;\n}\ninterface ScoreFactorRibbon {\n  kind: \"ribbon\";\n  arg: number;\n}\ninterface ScoreFactorJunk {\n  kind: \"junk\";\n  arg: number;\n}\ninterface ScoreFactorFiveBirds {\n  kind: \"five birds\";\n  arg: null;\n}\ninterface ScoreFactorBlueRibbons {\n  kind: \"blue ribbons\";\n  arg: null;\n}\ninterface ScoreFactorRedRibbons {\n  kind: \"red ribbons\";\n  arg: null;\n}\ninterface ScoreFactorPlantRibbons {\n  kind: \"plant ribbons\";\n  arg: null;\n}\ninterface ScoreFactorFourOfAMonth {\n  kind: \"four of a month\";\n  arg: null;\n}\ninterface ScoreFactorThreeStackings {\n  kind: \"three stackings\";\n  arg: null;\n}\ninterface ScoreFactorGo {\n  kind: \"go\";\n  arg: number;\n}\ninterface ScoreFactorShaking {\n  kind: \"shaking\";\n  arg: number;\n}\ninterface ScoreFactorBrightPenalty {\n  kind: \"bright penalty\";\n  arg: null;\n}\ninterface ScoreFactorAnimalPenalty {\n  kind: \"animal penalty\";\n  arg: null;\n}\ninterface ScoreFactorJunkPenalty {\n  kind: \"junk penalty\";\n  arg: null;\n}\ninterface ScoreFactorGoPenalty {\n  kind: \"go penalty\";\n  arg: null;\n}\n\nexport interface GameState {\n  player: 0 | 1;\n  bomb_increment: number;\n  go_histories: [number[], number[]];\n  select_match: SelectMatch | null;\n  shaking: [Card, CardList] | null;\n  shaking_histories: [Card[][], Card[][]];\n  stacking_histories: [number[], number[]];\n  score_factors: [ScoreFactor[], ScoreFactor[]];\n  scores: [number, number];\n  animal_9_moved: boolean | null;\n  ended: boolean;\n  winner: 0 | 1 | null;\n}\n\nexport interface GameFlags {\n  go: boolean;\n  select_match: boolean;\n  shaking: boolean;\n  move_animal_9: boolean;\n  four_of_a_month: boolean;\n}\n\nexport interface GameEssentials {\n  board: GameBoard;\n  state: GameState;\n  flags: GameFlags;\n}\nexport interface Game extends GameEssentials {\n  logs: string[];\n  players: string[];\n  actions: GameAction[];\n  estimate: [number[], number] | null;\n}\nexport type GameAction =\n  | GameActionThrow\n  | GameActionThrowBomb\n  | GameActionBomb\n  | GameActionShakable\n  | GameActionShaking\n  | GameActionSelectMatch\n  | GameActionFourOfAMonth\n  | GameActionMoveAnimal9\n  | GameActionGo;\ninterface GameActionThrow {\n  kind: \"throw\";\n  card: Card;\n}\ninterface GameActionThrowBomb {\n  kind: \"throw bomb\";\n}\ninterface GameActionBomb {\n  kind: \"bomb\";\n  month: number;\n}\ninterface GameActionShakable {\n  kind: \"shakable\";\n  card: Card;\n}\ninterface GameActionShaking {\n  kind: \"shaking\";\n  option: boolean;\n}\nexport interface GameActionSelectMatch {\n  kind: \"select match\";\n  match: Card;\n}\ninterface GameActionFourOfAMonth {\n  kind: \"four of a month\";\n  option: boolean;\n}\ninterface GameActionMoveAnimal9 {\n  kind: \"move animal 9\";\n  option: boolean;\n}\ninterface GameActionGo {\n  kind: \"go\";\n  option: boolean;\n}\n\nexport const ALL_ACTIONS: GameAction[] = [\n  { kind: \"throw\", card: \"B01\" },\n  { kind: \"throw\", card: \"R01\" },\n  { kind: \"throw\", card: \"J010\" },\n  { kind: \"throw\", card: \"J011\" },\n  { kind: \"throw\", card: \"A02\" },\n  { kind: \"throw\", card: \"R02\" },\n  { kind: \"throw\", card: \"J020\" },\n  { kind: \"throw\", card: \"J021\" },\n  { kind: \"throw\", card: \"B03\" },\n  { kind: \"throw\", card: \"R03\" },\n  { kind: \"throw\", card: \"J030\" },\n  { kind: \"throw\", card: \"J031\" },\n  { kind: \"throw\", card: \"A04\" },\n  { kind: \"throw\", card: \"R04\" },\n  { kind: \"throw\", card: \"J040\" },\n  { kind: \"throw\", card: \"J041\" },\n  { kind: \"throw\", card: \"A05\" },\n  { kind: \"throw\", card: \"R05\" },\n  { kind: \"throw\", card: \"J050\" },\n  { kind: \"throw\", card: \"J051\" },\n  { kind: \"throw\", card: \"A06\" },\n  { kind: \"throw\", card: \"R06\" },\n  { kind: \"throw\", card: \"J060\" },\n  { kind: \"throw\", card: \"J061\" },\n  { kind: \"throw\", card: \"A07\" },\n  { kind: \"throw\", card: \"R07\" },\n  { kind: \"throw\", card: \"J070\" },\n  { kind: \"throw\", card: \"J071\" },\n  { kind: \"throw\", card: \"B08\" },\n  { kind: \"throw\", card: \"A08\" },\n  { kind: \"throw\", card: \"J080\" },\n  { kind: \"throw\", card: \"J081\" },\n  { kind: \"throw\", card: \"A09\" },\n  { kind: \"throw\", card: \"R09\" },\n  { kind: \"throw\", card: \"J090\" },\n  { kind: \"throw\", card: \"J091\" },\n  { kind: \"throw\", card: \"A10\" },\n  { kind: \"throw\", card: \"R10\" },\n  { kind: \"throw\", card: \"J100\" },\n  { kind: \"throw\", card: \"J101\" },\n  { kind: \"throw\", card: \"B11\" },\n  { kind: \"throw\", card: \"J110\" },\n  { kind: \"throw\", card: \"J111\" },\n  { kind: \"throw\", card: \"J112\" },\n  { kind: \"throw\", card: \"B12\" },\n  { kind: \"throw\", card: \"A12\" },\n  { kind: \"throw\", card: \"R12\" },\n  { kind: \"throw\", card: \"J120\" },\n  { kind: \"throw\", card: \"+2\" },\n  { kind: \"throw\", card: \"+3\" },\n  { kind: \"throw bomb\" },\n  { kind: \"bomb\", month: 1 },\n  { kind: \"bomb\", month: 2 },\n  { kind: \"bomb\", month: 3 },\n  { kind: \"bomb\", month: 4 },\n  { kind: \"bomb\", month: 5 },\n  { kind: \"bomb\", month: 6 },\n  { kind: \"bomb\", month: 7 },\n  { kind: \"bomb\", month: 8 },\n  { kind: \"bomb\", month: 9 },\n  { kind: \"bomb\", month: 10 },\n  { kind: \"bomb\", month: 11 },\n  { kind: \"bomb\", month: 12 },\n  { kind: \"shakable\", card: \"B01\" },\n  { kind: \"shakable\", card: \"R01\" },\n  { kind: \"shakable\", card: \"J010\" },\n  { kind: \"shakable\", card: \"J011\" },\n  { kind: \"shakable\", card: \"A02\" },\n  { kind: \"shakable\", card: \"R02\" },\n  { kind: \"shakable\", card: \"J020\" },\n  { kind: \"shakable\", card: \"J021\" },\n  { kind: \"shakable\", card: \"B03\" },\n  { kind: \"shakable\", card: \"R03\" },\n  { kind: \"shakable\", card: \"J030\" },\n  { kind: \"shakable\", card: \"J031\" },\n  { kind: \"shakable\", card: \"A04\" },\n  { kind: \"shakable\", card: \"R04\" },\n  { kind: \"shakable\", card: \"J040\" },\n  { kind: \"shakable\", card: \"J041\" },\n  { kind: \"shakable\", card: \"A05\" },\n  { kind: \"shakable\", card: \"R05\" },\n  { kind: \"shakable\", card: \"J050\" },\n  { kind: \"shakable\", card: \"J051\" },\n  { kind: \"shakable\", card: \"A06\" },\n  { kind: \"shakable\", card: \"R06\" },\n  { kind: \"shakable\", card: \"J060\" },\n  { kind: \"shakable\", card: \"J061\" },\n  { kind: \"shakable\", card: \"A07\" },\n  { kind: \"shakable\", card: \"R07\" },\n  { kind: \"shakable\", card: \"J070\" },\n  { kind: \"shakable\", card: \"J071\" },\n  { kind: \"shakable\", card: \"B08\" },\n  { kind: \"shakable\", card: \"A08\" },\n  { kind: \"shakable\", card: \"J080\" },\n  { kind: \"shakable\", card: \"J081\" },\n  { kind: \"shakable\", card: \"A09\" },\n  { kind: \"shakable\", card: \"R09\" },\n  { kind: \"shakable\", card: \"J090\" },\n  { kind: \"shakable\", card: \"J091\" },\n  { kind: \"shakable\", card: \"A10\" },\n  { kind: \"shakable\", card: \"R10\" },\n  { kind: \"shakable\", card: \"J100\" },\n  { kind: \"shakable\", card: \"J101\" },\n  { kind: \"shakable\", card: \"B11\" },\n  { kind: \"shakable\", card: \"J110\" },\n  { kind: \"shakable\", card: \"J111\" },\n  { kind: \"shakable\", card: \"J112\" },\n  { kind: \"shakable\", card: \"B12\" },\n  { kind: \"shakable\", card: \"A12\" },\n  { kind: \"shakable\", card: \"R12\" },\n  { kind: \"shakable\", card: \"J120\" },\n  { kind: \"shaking\", option: false },\n  { kind: \"shaking\", option: true },\n  { kind: \"select match\", match: \"B01\" },\n  { kind: \"select match\", match: \"R01\" },\n  { kind: \"select match\", match: \"J010\" },\n  { kind: \"select match\", match: \"J011\" },\n  { kind: \"select match\", match: \"A02\" },\n  { kind: \"select match\", match: \"R02\" },\n  { kind: \"select match\", match: \"J020\" },\n  { kind: \"select match\", match: \"J021\" },\n  { kind: \"select match\", match: \"B03\" },\n  { kind: \"select match\", match: \"R03\" },\n  { kind: \"select match\", match: \"J030\" },\n  { kind: \"select match\", match: \"J031\" },\n  { kind: \"select match\", match: \"A04\" },\n  { kind: \"select match\", match: \"R04\" },\n  { kind: \"select match\", match: \"J040\" },\n  { kind: \"select match\", match: \"J041\" },\n  { kind: \"select match\", match: \"A05\" },\n  { kind: \"select match\", match: \"R05\" },\n  { kind: \"select match\", match: \"J050\" },\n  { kind: \"select match\", match: \"J051\" },\n  { kind: \"select match\", match: \"A06\" },\n  { kind: \"select match\", match: \"R06\" },\n  { kind: \"select match\", match: \"J060\" },\n  { kind: \"select match\", match: \"J061\" },\n  { kind: \"select match\", match: \"A07\" },\n  { kind: \"select match\", match: \"R07\" },\n  { kind: \"select match\", match: \"J070\" },\n  { kind: \"select match\", match: \"J071\" },\n  { kind: \"select match\", match: \"B08\" },\n  { kind: \"select match\", match: \"A08\" },\n  { kind: \"select match\", match: \"J080\" },\n  { kind: \"select match\", match: \"J081\" },\n  { kind: \"select match\", match: \"A09\" },\n  { kind: \"select match\", match: \"R09\" },\n  { kind: \"select match\", match: \"J090\" },\n  { kind: \"select match\", match: \"J091\" },\n  { kind: \"select match\", match: \"A10\" },\n  { kind: \"select match\", match: \"R10\" },\n  { kind: \"select match\", match: \"J100\" },\n  { kind: \"select match\", match: \"J101\" },\n  { kind: \"select match\", match: \"B11\" },\n  { kind: \"select match\", match: \"J110\" },\n  { kind: \"select match\", match: \"J111\" },\n  { kind: \"select match\", match: \"J112\" },\n  { kind: \"select match\", match: \"B12\" },\n  { kind: \"select match\", match: \"A12\" },\n  { kind: \"select match\", match: \"R12\" },\n  { kind: \"select match\", match: \"J120\" },\n  { kind: \"four of a month\", option: false },\n  { kind: \"four of a month\", option: true },\n  { kind: \"move animal 9\", option: false },\n  { kind: \"move animal 9\", option: true },\n  { kind: \"go\", option: false },\n  { kind: \"go\", option: true },\n];\n","// print a float in a form of \"x.xxxx\"\nexport const roundFloat = (a: number) => {\n  const f = Math.round(a * 10000) / 10000;\n  if (Math.floor(f) === f) {\n    return `${f}.`.padEnd(6, \"0\");\n  }\n  return `${Math.round(f * 10000) / 10000}`.padEnd(6, \"0\");\n};\n","import { ALL_ACTIONS, Card, Game, GameAction } from \"../types/game\";\nimport { cardNameKo, getMonthName } from \"./card\";\nimport { roundFloat } from \"./number\";\n\n// hide private cards (if peep is false)\nexport function hiddenHand(game: Game, player: 0 | 1, peep: boolean): Card[] {\n  if (peep) return game.board.hands[player];\n  const len = game.board.hands[player].length;\n  const shown = game.board.hands[player].filter(\n    (card) =>\n      card.startsWith(\"*\") ||\n      game.state.shaking_histories[player].flat().includes(card)\n  );\n  return [...shown, ...Array(len - shown.length).fill(\"?\")];\n}\n\n// return the name of an action in korean\nexport function actionNameKo(action: GameAction): string {\n  switch (action.kind) {\n    case \"throw\":\n      return `${cardNameKo(action.card)} 내기`;\n    case \"throw bomb\":\n      return \"폭탄 패 내기\";\n    case \"bomb\":\n      return `${action.month}월 폭탄 내기`;\n    case \"shakable\":\n      return `${cardNameKo(action.card)} 내기`;\n    case \"shaking\":\n      return action.option ? \"흔들기\" : \"흔들지 않기\";\n    case \"select match\":\n      return `${cardNameKo(action.match)} 가져오기`;\n    case \"four of a month\":\n      return action.option ? \"총통으로 끝내기\" : \"총통으로 끝내지 않기\";\n    case \"move animal 9\":\n      return action.option\n        ? \"9월 열끗 쌍피로 쓰기\"\n        : \"9월 열끗 그대로 열끗으로 쓰기\";\n    case \"go\":\n      return action.option ? \"고\" : \"스톱\";\n  }\n}\n\n// return the name of an action in english\nexport function actionNameEn(action: GameAction): string {\n  switch (action.kind) {\n    case \"throw\":\n      return `throw ${cardNameKo(action.card)}`;\n    case \"throw bomb\":\n      return \"throw a bomb card\";\n    case \"bomb\":\n      return `throw a bomb of ${getMonthName(action.month)}`;\n    case \"shakable\":\n      return `throw ${cardNameKo(action.card)}`;\n    case \"shaking\":\n      return action.option ? \"shake\" : \"don't shake\";\n    case \"select match\":\n      return `select ${cardNameKo(action.match)}`;\n    case \"four of a month\":\n      return action.option\n        ? \"end the game by a four-of-a-month\"\n        : \"don't end the game by a four-of-a-month\";\n    case \"move animal 9\":\n      return action.option\n        ? \"use the animal of September as a double junk\"\n        : \"use the animal of September as an animal\";\n    case \"go\":\n      return action.option ? \"go\" : \"stop\";\n  }\n}\n\n// postprocess the policy to show the calculated policy\n// see `Estimate.tsx` or `GoStop.tsx` to find a use case\nexport function postprocessPolicy(policyBefore: number[], language: string) {\n  const policy_ = policyBefore\n    .map(\n      (v, i) =>\n        [\n          (language === \"ko\" ? actionNameKo : actionNameEn)(ALL_ACTIONS[i]),\n          v,\n        ] as [string, number]\n    )\n    .filter(([, v]) => v !== 0)\n    .sort((a, b) => b[1] - a[1]);\n  const policy: [number, string, string][] = [];\n  for (let i = 0; i < policy_.length; i++) {\n    if (i > 0 && policy_[i - 1][1] === policy_[i][1]) {\n      policy.push([policy[i - 1][0], policy_[i][0], roundFloat(policy_[i][1])]);\n    } else {\n      policy.push([i + 1, policy_[i][0], roundFloat(policy_[i][1])]);\n    }\n  }\n  return policy;\n}\n","export function capitalize(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n","// Buttons styled as a Go-Stop card.\n\nimport React from \"react\";\nimport { Card } from \"../types/game\";\nimport { cardToImageSrc } from \"../utils/card\";\n\nimport \"./CardButton.css\";\n\ntype CardButtonProps = {\n  card?: Card;\n  onClick?: React.MouseEventHandler;\n  className?: string;\n  title?: string;\n  style?: React.CSSProperties;\n  anchorBottom?: boolean;\n  hoverEnabled?: boolean;\n};\n\nconst CardButton: React.FC<CardButtonProps> = (props) => {\n  const {\n    card = \"?\",\n    anchorBottom = false,\n    hoverEnabled = true,\n    title,\n    children,\n    ...restProps\n  } = props;\n  return (\n    <button\n      {...restProps}\n      className={`${hoverEnabled ? \"card-button\" : \"\"} ${\n        props.className ?? \"\"\n      } ${anchorBottom ? \"anchor-bottom\" : \"\"} ${\n        !hoverEnabled ? \"cursor-default\" : \"\"\n      }`}\n    >\n      <img\n        title={title}\n        alt={title}\n        src={cardToImageSrc(card)}\n        className=\"w-full h-full\"\n        style={{\n          borderRadius: 4,\n        }}\n      />\n    </button>\n  );\n};\n\nexport default CardButton;\n","// a button component with a text in it\n\nimport React from \"react\";\n\nconst mapIconBaseSize = {\n  xs: \"text-xs\",\n  sm: \"text-sm\",\n  base: \"text-base\",\n  lg: \"text-lg\",\n  xl: \"text-xl\",\n  \"2xl\": \"text-2xl\",\n};\n\ntype TextButtonProps = {\n  size?: keyof typeof mapIconBaseSize;\n  dark?: boolean;\n  onClick?: React.MouseEventHandler;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nconst TextButton: React.FC<TextButtonProps> = (props) => {\n  const { size = \"base\", dark = false, ...restProps } = props;\n  return (\n    <button\n      {...restProps}\n      className={`flex items-center justify-center px-5 py-3 rounded-full\n        disabled:bg-transparent disabled:opacity-50 disabled:cursor-not-allowed \n        focus:outline-none focus:shadow-outline ${mapIconBaseSize[size]} ${\n        props.className ?? \"\"\n      } ${\n        dark\n          ? \"text-white bg-opacity-15 hover:bg-opacity-35 bg-white\"\n          : \"bg-opacity-25 hover:bg-opacity-50 text-gray-800 bg-gray-400\"\n      }`}\n    />\n  );\n};\n\nexport default TextButton;\n","// Go-Stop visualizer component\n\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { GoTriangleRight } from \"react-icons/go\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useWindowSize } from \"../hooks\";\nimport { socket } from \"../socket\";\nimport { Card, Game, GameAction } from \"../types/game\";\nimport { cardNameKo, cardToImageSrc } from \"../utils/card\";\nimport { hiddenHand, postprocessPolicy } from \"../utils/game\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\nimport { capitalize } from \"../utils/string\";\nimport { roundFloat } from \"../utils/number\";\nimport CardButton from \"./CardButton\";\nimport TextButton from \"./TextButton\";\n\nconst GoStop: React.FC<\n  RouteComponentProps & {\n    peep: boolean; // whether peep AlphaGoStop's estimation or not\n    game: Game;\n    player: 0 | 1 | null;\n    clientId: string | null;\n    roomId: string | null;\n    updateGame: (game: Game | null) => void;\n  }\n> = ({\n  peep,\n  game,\n  player,\n  clientId,\n  roomId,\n  updateGame,\n  ...routeComponentProps\n}) => {\n  return (\n    <div\n      className=\"w-full h-full flex place-items-center\"\n      style={{\n        backgroundColor: \"#3B7157\",\n      }}\n    >\n      <GoStopField\n        peep={peep}\n        game={game}\n        player={player}\n        clientId={clientId}\n      />\n      {game.state.ended ? (\n        // The modal component shown when a game is over.\n        <GameEnded\n          game={game}\n          player={player}\n          clientId={clientId}\n          updateGame={updateGame}\n          roomId={roomId}\n          {...routeComponentProps}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst GameEnded: React.FC<\n  RouteComponentProps & {\n    game: Game;\n    player: 0 | 1 | null;\n    clientId: string | null;\n    roomId: string | null;\n    updateGame: (game: Game | null) => void;\n  }\n> = ({ game, player, clientId, roomId, updateGame, history }) => {\n  const involved = !!clientId && game.players.includes(clientId);\n  const { addToast } = useToasts();\n  const { t } = useTranslation();\n  // Translate `process.env.REACT_APP_AI_AGENT_ID` into the text AlphaGoStop\n  const getName = (name: string) =>\n    name === process.env.REACT_APP_AI_AGENT_ID ? \"AlphaGoStop\" : name;\n\n  return (\n    <div\n      className=\"w-full h-full flex place-items-center fixed z-10 top-0 left-0\"\n      style={{\n        backgroundColor: \"rgba(0, 0, 0, 0.45)\",\n      }}\n    >\n      <div className=\"p-8 bg-white rounded-2xl w-2/3 text-center m-auto\">\n        <h2 className=\"font-black text-3xl text-gray-800 mb-3\">\n          {game.state.winner === null\n            ? `🤔 ${capitalize(t(\"push back\"))}`\n            : game.state.winner === player\n            ? `🌟 ${capitalize(t(\"victory\"))}!`\n            : 1 - game.state.winner === player\n            ? `😥 ${capitalize(t(\"defeat\"))}...`\n            : `🏆 ${getName(game.players[game.state.winner])}${t(\n                \"'s\"\n              )} ${capitalize(t(\"victory\"))}!`}\n        </h2>\n        <p>\n          <span className=\"text-xl text-gray-800\">\n            {game.state.winner === null ? null : (\n              <>\n                {`${capitalize(t(\"total\"))} `}\n                <span className=\"font-bold\">\n                  {game.state.scores[game.state.winner]}\n                </span>\n                {`${t(\"points\")}`}\n              </>\n            )}\n          </span>\n        </p>\n        <p>\n          <span className=\"text-md text-gray-800\">\n            {\n              // show the score factors\n              game.state.winner === null\n                ? null\n                : [\n                    {\n                      kind: \"go-add\",\n                      arg: game.state.go_histories[game.state.winner].length,\n                    },\n                    ...game.state.score_factors[game.state.winner],\n                  ]\n                    .map((factor) =>\n                      factor.kind === \"go-add\"\n                        ? factor.arg === 0\n                          ? null\n                          : `${capitalize(t(\"go\"))} ${factor.arg}${t(\"points\")}`\n                        : factor.kind === \"go\"\n                        ? factor.arg <= 2\n                          ? null\n                          : `${capitalize(t(\"go\"))} ${Math.pow(\n                              2,\n                              factor.arg - 2\n                            )}${t(\"multiples\")}`\n                        : factor.kind === \"bright\"\n                        ? factor.arg === 0\n                          ? null\n                          : `${capitalize(t(\"brights\"))} ${factor.arg}${t(\n                              \"points\"\n                            )}`\n                        : factor.kind === \"animal\"\n                        ? factor.arg < 5\n                          ? null\n                          : `${capitalize(t(\"animals\"))} ${factor.arg - 4}${t(\n                              \"points\"\n                            )}`\n                        : factor.kind === \"ribbon\"\n                        ? factor.arg < 5\n                          ? null\n                          : `${capitalize(t(\"ribbons\"))} ${factor.arg - 4}${t(\n                              \"points\"\n                            )}`\n                        : factor.kind === \"junk\"\n                        ? factor.arg < 10\n                          ? null\n                          : `${capitalize(t(\"junks\"))} ${factor.arg - 9}${t(\n                              \"points\"\n                            )}`\n                        : factor.kind === \"five birds\"\n                        ? `${capitalize(t(\"five birds\"))} 5${t(\"points\")}`\n                        : factor.kind === \"red ribbons\"\n                        ? `${capitalize(t(\"red ribbons\"))} 3${t(\"points\")}`\n                        : factor.kind === \"blue ribbons\"\n                        ? `${capitalize(t(\"blue ribbons\"))} 3${t(\"points\")}`\n                        : factor.kind === \"plant ribbons\"\n                        ? `${capitalize(t(\"plant ribbons\"))} 3${t(\"points\")}`\n                        : factor.kind === \"shaking\"\n                        ? factor.arg === 0\n                          ? null\n                          : `${capitalize(t(\"shaking\"))} ${Math.pow(\n                              2,\n                              factor.arg\n                            )}${t(\"multiples\")}`\n                        : factor.kind === \"bright penalty\"\n                        ? `${capitalize(t(\"bright penalty\"))} 2${t(\n                            \"multiples\"\n                          )}`\n                        : factor.kind === \"animal penalty\"\n                        ? `${capitalize(t(\"animal penalty\"))} 2${t(\n                            \"multiples\"\n                          )}`\n                        : factor.kind === \"junk penalty\"\n                        ? `${capitalize(t(\"junk penalty\"))} 2${t(\"multiples\")}`\n                        : factor.kind === \"go penalty\"\n                        ? `${capitalize(t(\"go penalty\"))} 2${t(\"multiples\")}`\n                        : factor.kind === \"four of a month\"\n                        ? `${capitalize(t(\"four of a month\"))} 10${t(\"points\")}`\n                        : `${capitalize(t(\"three stackings\"))} 10${t(\"points\")}`\n                    )\n                    .filter((x) => x !== null)\n                    .join(\", \")\n            }\n          </span>\n        </p>\n        <div>\n          {\n            // when the client is involved in a game, show `new games` and `return to room` buttons.\n            involved ? (\n              <div className=\"flex\">\n                <TextButton\n                  className=\"m-auto mt-4\"\n                  onClick={async () => {\n                    if (!socket) return;\n                    if (!clientId) return;\n\n                    updateGame(null);\n\n                    emitToServer(\"end game\", { client: clientId });\n                    const endGameMessage = await getServerResponse(\n                      \"end game response\"\n                    );\n                    if (!endGameMessage.success) {\n                      addToast(endGameMessage.error, {\n                        appearance: \"error\",\n                        autoDismiss: true,\n                      });\n                      return;\n                    }\n\n                    emitToServer(\"start game\", { client: clientId });\n                    const startGameMessage = await getServerResponse(\n                      \"start game response\"\n                    );\n                    if (!startGameMessage.success) {\n                      addToast(startGameMessage.error, {\n                        appearance: \"error\",\n                        autoDismiss: true,\n                      });\n                    }\n                  }}\n                >\n                  {capitalize(t(\"new games\"))}\n                </TextButton>\n                <TextButton\n                  className=\"m-auto mt-4\"\n                  onClick={async () => {\n                    if (!socket) return;\n                    if (!clientId) return;\n                    if (!roomId) return;\n\n                    updateGame(null);\n\n                    emitToServer(\"end game\", { client: clientId });\n                    const endGameMessage = await getServerResponse(\n                      \"end game response\"\n                    );\n                    if (!endGameMessage.success) {\n                      addToast(endGameMessage.error, {\n                        appearance: \"error\",\n                        autoDismiss: true,\n                      });\n                      return;\n                    }\n\n                    if (history) {\n                      history.push(`/rooms/${roomId}`);\n                    }\n                  }}\n                >\n                  {capitalize(t(\"return to room\"))}\n                </TextButton>\n              </div>\n            ) : null\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst GoStopField: React.FC<{\n  peep: boolean;\n  game: Game;\n  player: 0 | 1 | null;\n  clientId: string | null;\n}> = ({ peep, game, player, clientId }) => {\n  const { t, i18n } = useTranslation();\n\n  const BASE_WIDTH = 1258;\n  const BASE_HEIGHT = 1327 + (player === null ? -53 : 0);\n\n  const windowSize = useWindowSize();\n  const ratio = Math.min(\n    (windowSize.width - 32) / BASE_WIDTH,\n    (windowSize.height - 112) / BASE_HEIGHT\n  );\n  const bottom = player ?? 1;\n  const top = bottom === 0 ? 1 : 0;\n\n  return (\n    <div\n      className=\"m-auto\"\n      style={{\n        width: ratio * BASE_WIDTH + 32,\n        height: ratio * BASE_HEIGHT + 32,\n        padding: 16,\n      }}\n    >\n      {/* show the estimation when `peep` is true */}\n      {peep && (\n        <>\n          <div\n            className=\"fixed right-0 top-0 text-xs overflow-y-auto z-20 bg-white text-white bg-opacity-25 p-4 rounded-xl\"\n            style={{\n              height: \"10rem\",\n              width: \"15rem\",\n              top: \"5rem\",\n              left: \"1rem\",\n            }}\n          >\n            <pre className=\"break-all whitespace-pre-wrap\">\n              {\n                // show the estimated policy\n                !!game.estimate &&\n                  (() => {\n                    const policy = postprocessPolicy(\n                      game.estimate[0],\n                      i18n.language\n                    );\n                    const res = policy\n                      .slice(0, 5)\n                      .map(([i, action, prob]) => `${i}. ${action} (${prob})`)\n                      .join(\"\\n\");\n                    return res;\n                  })()\n              }\n            </pre>\n          </div>\n          <div\n            className=\"fixed text-center text-white\"\n            style={{\n              marginTop: -ratio * 48,\n              fontSize: ratio * 28,\n              width: \"calc(100% - 32px)\",\n              maxWidth: ratio * BASE_WIDTH,\n            }}\n          >\n            {/* show the estimated score */}\n            {t(\"Estimated score\")}:{\" \"}\n            {!!game.estimate ? roundFloat(game.estimate[1]) : \"-\"}\n          </div>\n        </>\n      )}\n      {/* render opponent's hidden (when peep is false) hand */}\n      <GoStopHand\n        ratio={ratio}\n        hand={hiddenHand(game, top, peep)}\n        clientId={clientId}\n        turn={game.state.player === top}\n      />\n      <div style={{ height: ratio * 32 }} />\n\n      {/* render opponent's name/score card and capture field */}\n      <div className=\"flex justify-center\" style={{ height: ratio * 189 }}>\n        <GoStopNameCard ratio={ratio} name={game.players[top]} />\n        <GoStopCaptureField\n          captureField={game.board.capture_fields[top]}\n          animal9Moved={game.state.animal_9_moved}\n          ratio={ratio}\n        />\n        <GoStopScoreCard\n          ratio={ratio}\n          score={game.state.scores[top]}\n          go={game.state.go_histories[top].length}\n          stacking={game.state.stacking_histories[top].length}\n          shaking={game.state.shaking_histories[top].length}\n        />\n      </div>\n      <div style={{ height: ratio * 96 }} />\n      {/* render the center field */}\n      <GoStopCenterField centerField={game.board.center_field} ratio={ratio} />\n      <div style={{ height: ratio * 96 }} />\n      {/* render my name card/score and capture field */}\n      <div className=\"flex justify-center\" style={{ height: ratio * 189 }}>\n        <GoStopNameCard ratio={ratio} name={game.players[bottom]} />\n        <GoStopCaptureField\n          captureField={game.board.capture_fields[bottom]}\n          animal9Moved={game.state.animal_9_moved}\n          ratio={ratio}\n        />\n        <GoStopScoreCard\n          ratio={ratio}\n          score={game.state.scores[bottom]}\n          go={game.state.go_histories[bottom].length}\n          stacking={game.state.stacking_histories[bottom].length}\n          shaking={game.state.shaking_histories[bottom].length}\n        />\n      </div>\n      <div style={{ height: ratio * 32 }} />\n      {/* render my hand if the client is in the game; elsewise hide it */}\n      <GoStopHand\n        ratio={ratio}\n        hand={\n          player !== null\n            ? game.board.hands[bottom]\n            : hiddenHand(game, bottom, peep)\n        }\n        mine={player !== null}\n        actions={game.state.player === player ? game.actions : []}\n        clientId={clientId}\n        turn={game.state.player === bottom}\n      />\n    </div>\n  );\n};\n\n// render the profile image and the name\nconst GoStopNameCard: React.FC<{ ratio: number; name: string }> = ({\n  ratio,\n  name: name_,\n}) => {\n  const { t } = useTranslation();\n  const name =\n    name_ === process.env.REACT_APP_AI_AGENT_ID ? \"AlphaGoStop\" : name_;\n  const avatar =\n    name_ === process.env.REACT_APP_AI_AGENT_ID\n      ? \"/images/ai_image.jpg\"\n      : \"https://i1.wp.com/similarpng.com/wp-content/plugins/userswp/assets/images/no_profile.png\";\n  return (\n    <div\n      style={{\n        width: ratio * 106,\n        marginRight: ratio * 40,\n        height: ratio * 90 * 1.618,\n        fontSize: 24 * ratio,\n        padding: 8 * ratio,\n        lineHeight: 1.1,\n        borderRadius: 8 * ratio,\n        backgroundColor: \"#29604D\",\n        textAlign: \"center\",\n        position: \"relative\",\n      }}\n      className=\"text-white\"\n    >\n      <div\n        style={{\n          height: ratio * 90,\n          backgroundColor: \"white\",\n          borderRadius: 8 * ratio,\n        }}\n      >\n        <img\n          src={avatar}\n          style={{\n            width: ratio * 90,\n            height: ratio * 90,\n            borderRadius: 8 * ratio,\n          }}\n          className=\"object-cover object-center\"\n          alt={`${name}${t(\"'s\")} ${t(\"profile image\")}`}\n        />\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: 8 * ratio,\n          width: ratio * 90,\n        }}\n        className=\"truncate\"\n      >\n        {name}\n      </div>\n    </div>\n  );\n};\n\n// render the score and go/stacking/shaking counts\nconst GoStopScoreCard: React.FC<{\n  ratio: number;\n  score: number;\n  go: number;\n  stacking: number;\n  shaking: number;\n}> = ({ ratio, score, go, stacking, shaking }) => {\n  const { t } = useTranslation();\n  return (\n    <div\n      style={{\n        width: ratio * 106,\n        marginLeft: ratio * 40,\n        height: ratio * 90 * 1.618,\n        fontSize: 24 * ratio,\n        padding: 8 * ratio,\n        lineHeight: 1.1,\n        borderRadius: 8 * ratio,\n        backgroundColor: \"#29604D\",\n        fontFamily: \"sans-serif\",\n        textAlign: \"left\",\n      }}\n      className=\"text-white\"\n    >\n      <div\n        style={{\n          fontSize: score > 99999 ? \"1em\" : score > 9999 ? \"1.1em\" : \"1.3em\",\n          textAlign: \"center\",\n          lineHeight: `${48 * ratio}px`,\n          whiteSpace: \"nowrap\",\n          width: \"min-content\",\n          marginLeft: \"50%\",\n          transform: \"translateX(-50%)\",\n          padding: `0 ${8 * ratio}px`,\n          borderRadius: 8 * ratio,\n        }}\n        className=\"font-bold text-right\"\n      >\n        {score}\n        {t(\"pt\")}\n      </div>\n      <div style={{ marginLeft: 15 * ratio, width: 60 * ratio }}>\n        🔥 <span className=\"font-black float-right\">{go}</span>\n      </div>\n      <div style={{ marginLeft: 15 * ratio, width: 60 * ratio }}>\n        💩 <span className=\"font-black float-right\">{stacking}</span>\n      </div>\n      <div style={{ marginLeft: 15 * ratio, width: 60 * ratio }}>\n        🔔 <span className=\"font-black float-right\">{shaking}</span>\n      </div>\n    </div>\n  );\n};\n\n// Go-Stop card component\nconst GoStopCard: React.FC<{\n  card: Card;\n  width?: number;\n  height?: number;\n  alt?: string;\n  title?: string;\n  style?: React.CSSProperties;\n  onClick?: React.MouseEventHandler;\n  className?: string;\n}> = ({\n  card,\n  width: w,\n  height: h,\n  alt,\n  title,\n  style = {},\n  className,\n  onClick,\n}) => {\n  const { width, height } =\n    !w && !h\n      ? { width: 68, height: 105 }\n      : !w && !!h\n      ? { width: (68 / 105) * h, height: h }\n      : !!w && !h\n      ? { width: w, height: (w * 105) / 68 }\n      : { width: w, height: h };\n  return (\n    <img\n      src={cardToImageSrc(card)}\n      style={{\n        width,\n        height,\n        objectPosition: \"center\",\n        objectFit: \"cover\",\n        ...style,\n      }}\n      alt={alt ?? cardNameKo(card)}\n      title={title}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\n// render a hand\nconst GoStopHand: React.FC<{\n  hand: Card[];\n  mine?: boolean; // whether the hand is mine (if so, make it larger) or not\n  actions?: GameAction[];\n  ratio: number;\n  style?: React.CSSProperties;\n  clientId: string | null;\n  turn: boolean; // if the player of the given hand is playing their turn\n}> = ({\n  hand,\n  mine = false,\n  actions = [],\n  ratio,\n  style = {},\n  turn,\n  clientId,\n}) => {\n  const { addToast } = useToasts();\n  const { t } = useTranslation();\n  const width = mine ? 100 * ratio : 68 * ratio;\n  const height = mine ? 154 * ratio : 105 * ratio;\n  const gap = mine ? 12 * ratio : 8 * ratio;\n  return (\n    <div className=\"flex w-full place-content-center\">\n      <div\n        style={{\n          width: mine ? 54 * ratio : 40 * ratio,\n          height: height + 2 * gap,\n          lineHeight: 1,\n        }}\n        className=\"flex items-center\"\n      >\n        {turn && hand.length > 0 && (\n          <GoTriangleRight\n            size={mine ? 40 * ratio : 32 * ratio}\n            color=\"white\"\n          />\n        )}\n      </div>\n      <div\n        className=\"flex\"\n        style={{\n          padding: gap / 2,\n          backgroundColor: hand.length === 0 ? \"transparent\" : \"#29604D\",\n          borderRadius: 8 * ratio,\n          marginRight: mine ? 54 * ratio : 40 * ratio,\n          minWidth: 16 * ratio + 2 * gap,\n          height: height + 2 * gap,\n          ...style,\n        }}\n      >\n        {hand.map((card, i) => {\n          const action = !mine\n            ? undefined\n            : actions.find(\n                (action) =>\n                  (action.kind === \"throw\" && action.card === card) ||\n                  (action.kind === \"throw bomb\" && card.startsWith(\"*\")) ||\n                  (action.kind === \"bomb\" &&\n                    [\"B\", \"A\", \"R\", \"J\"].includes(card[0]) &&\n                    action.month === parseInt(card.substring(1, 3), 10)) ||\n                  (action.kind === \"shakable\" && action.card === card)\n              );\n          const title = !action\n            ? undefined\n            : action.kind === \"throw\"\n            ? capitalize(t(\"throw the card\", { card }))\n            : action.kind === \"throw bomb\"\n            ? capitalize(t(\"throw a bomb card\"))\n            : action.kind === \"bomb\"\n            ? capitalize(t(\"throw a bomb of\", { month: action.month }))\n            : capitalize(\n                t(\"shake with\", { card, month: card.substring(1, 3) })\n              );\n          return (\n            <CardButton\n              key={i}\n              card={card}\n              style={{\n                width,\n                margin: gap / 2,\n                borderRadius: 4 * ratio,\n              }}\n              title={title}\n              hoverEnabled={mine}\n              anchorBottom\n              className={\n                !mine\n                  ? \"\"\n                  : actions.length === 0\n                  ? \"cursor-not-allowed\"\n                  : \"cursor-pointer\"\n              }\n              onClick={\n                !mine\n                  ? undefined\n                  : async () => {\n                      if (!action) return;\n                      socket.emit(\"play\", { client: clientId, action });\n                      const playMessage = await getServerResponse(\n                        \"play response\"\n                      );\n                      if (!playMessage.success) {\n                        addToast(playMessage.error, {\n                          appearance: \"error\",\n                          autoDismiss: true,\n                        });\n                      }\n                    }\n              }\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n// render the capture field\nconst GoStopCaptureField: React.FC<{\n  captureField: Card[];\n  animal9Moved: boolean | null;\n  ratio: number;\n  style?: React.CSSProperties;\n}> = ({ captureField, animal9Moved, ratio, style }) => {\n  const brightCards = captureField.filter((card) => card.startsWith(\"B\"));\n  const animalCards = captureField.filter(\n    (card) => card.startsWith(\"A\") && (!animal9Moved || card !== \"A09\")\n  );\n  const isGodoriMade =\n    animalCards.includes(\"A02\") &&\n    animalCards.includes(\"A04\") &&\n    animalCards.includes(\"A08\");\n  const animalScore =\n    Math.max(animalCards.length - 4, 0) + (isGodoriMade ? 5 : 0);\n  const ribbonCards = captureField.filter((card) => card.startsWith(\"R\"));\n  const isRedRibbonMade =\n    ribbonCards.includes(\"R01\") &&\n    ribbonCards.includes(\"R02\") &&\n    ribbonCards.includes(\"R03\");\n  const isPlantRibbonMade =\n    ribbonCards.includes(\"R04\") &&\n    ribbonCards.includes(\"R05\") &&\n    ribbonCards.includes(\"R07\");\n  const isBlueRibbonMade =\n    ribbonCards.includes(\"R06\") &&\n    ribbonCards.includes(\"R09\") &&\n    ribbonCards.includes(\"R10\");\n  const ribbonScore =\n    Math.max(ribbonCards.length - 4, 0) +\n    (isBlueRibbonMade ? 3 : 0) +\n    (isPlantRibbonMade ? 3 : 0) +\n    (isRedRibbonMade ? 3 : 0);\n\n  const junkCards = captureField.filter(\n    (card) =>\n      card.startsWith(\"J\") ||\n      card.startsWith(\"+\") ||\n      (!!animal9Moved && card === \"A09\")\n  );\n  const junkScore = junkCards\n    .map((card) =>\n      card.startsWith(\"J\")\n        ? card === \"J110\" || card === \"J111\"\n          ? 1\n          : card === \"J120\" || card === \"J112\"\n          ? 2\n          : 1\n        : card === \"A09\"\n        ? 2\n        : card === \"+2\"\n        ? 2\n        : card === \"+3\"\n        ? 3\n        : 0\n    )\n    .reduce((a: number, b: number) => a + b, 0);\n\n  return (\n    <>\n      <GoStopCaptureFieldPile\n        pile={brightCards}\n        sizeOfChunk={5}\n        ratio={ratio}\n        style={{ ...(style ?? {}), marginRight: 40 * ratio }}\n        number={\n          brightCards.length < 3\n            ? brightCards.length\n            : brightCards.length === 5\n            ? 15\n            : brightCards.length === 4\n            ? 4\n            : brightCards.includes(\"B12\")\n            ? 2\n            : 3\n        }\n        isScore={brightCards.length >= 3}\n      />\n      <GoStopCaptureFieldPile\n        pile={animalCards}\n        ratio={ratio}\n        style={{ marginRight: 40 * ratio }}\n        number={animalScore > 0 ? animalScore : animalCards.length}\n        isScore={animalScore > 0}\n      />\n      <GoStopCaptureFieldPile\n        pile={ribbonCards}\n        ratio={ratio}\n        style={{ marginRight: 40 * ratio }}\n        number={ribbonScore > 0 ? ribbonScore : ribbonCards.length}\n        isScore={ribbonScore > 0}\n      />\n      <GoStopCaptureFieldPile\n        pile={junkCards}\n        sizeOfChunk={8}\n        ratio={ratio}\n        style={{ marginRight: 40 * ratio }}\n        number={junkScore > 9 ? junkScore - 9 : junkScore}\n        isScore={junkScore > 9}\n      />\n    </>\n  );\n};\n\n// render a capture field pile with a small square on the bottom-right-most card\n// with a number (indicating the score) written\nconst GoStopCaptureFieldPile: React.FC<{\n  pile: Card[];\n  ratio: number;\n  number: number;\n  isScore: boolean;\n  sizeOfChunk?: number;\n  style?: React.CSSProperties;\n}> = ({ pile, ratio, number, isScore, sizeOfChunk = 3, style = {} }) => {\n  const width = 68 * ratio;\n  const height = 105 * ratio;\n  const horizontalGap = 24 * ratio;\n  const verticalGap = 28 * ratio;\n  const numberOfChunks = Math.ceil(pile.length / sizeOfChunk);\n  const wrapperWidth = width + (sizeOfChunk - 1) * horizontalGap;\n  const wrapperHeight = height + (numberOfChunks - 1) * verticalGap;\n  const last = pile.length - 1;\n  return (\n    <div\n      style={{\n        width: wrapperWidth,\n        height: wrapperHeight,\n        position: \"relative\",\n        ...style,\n      }}\n    >\n      {pile.map((card, i) => (\n        <GoStopCard\n          key={i}\n          card={card}\n          width={width}\n          style={{\n            position: \"absolute\",\n            left: (i % sizeOfChunk) * horizontalGap,\n            top: Math.floor(i / sizeOfChunk) * verticalGap,\n            borderRadius: 4 * ratio,\n          }}\n        />\n      ))}\n      {pile.length === 0 ? null : (\n        <div\n          className=\"absolute\"\n          style={{\n            width: 40 * ratio,\n            height: 40 * ratio,\n            left: (last % sizeOfChunk) * horizontalGap + width - 40 * ratio,\n            top:\n              Math.floor(last / sizeOfChunk) * verticalGap +\n              height -\n              40 * ratio,\n            backgroundColor: \"white\",\n            border: `${4 * ratio}px solid ${isScore ? \"#262C34\" : \"#4f5257\"}`,\n            color: isScore ? \"#262C34\" : \"#65676b\",\n            fontWeight: isScore ? \"bold\" : \"normal\",\n            borderRadius: 8 * ratio,\n            fontSize: 28 * ratio,\n            lineHeight: `${32 * ratio}px`,\n            textAlign: \"center\",\n          }}\n        >\n          {number}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// render the center field\nconst GoStopCenterField: React.FC<{\n  centerField: Game[\"board\"][\"center_field\"];\n  ratio: number;\n  style?: React.CSSProperties;\n}> = ({ centerField, ratio, style = {} }) => {\n  return (\n    <div className=\"flex\" style={{ height: ratio * 392, ...style }}>\n      <div\n        className=\"flex flex-wrap justify-between\"\n        style={{ height: ratio * 446, width: ratio * 428 }}\n      >\n        <GoStopCenterFieldItem field={centerField[\"1\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"2\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"3\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"7\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"8\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"9\"]} ratio={ratio} />\n      </div>\n      <div\n        className=\"flex justify-center items-center\"\n        style={{ height: ratio * 392, width: ratio * 290 }}\n      >\n        <GoStopCard\n          card=\"?\"\n          width={90 * ratio}\n          style={{ borderRadius: 8 * ratio }}\n        />\n      </div>\n      <div\n        className=\"flex flex-wrap justify-between\"\n        style={{ height: ratio * 446, width: ratio * 428 }}\n      >\n        <GoStopCenterFieldItem field={centerField[\"4\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"5\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"6\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"10\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"11\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"12\"]} ratio={ratio} />\n      </div>\n    </div>\n  );\n};\n\n// render each pile (representing a month) in the center field\nconst GoStopCenterFieldItem: React.FC<{\n  field?: Card[];\n  ratio: number;\n  style?: React.CSSProperties;\n}> = ({ field = [], ratio, style }) => {\n  const gapRatio = field.length <= 3 ? 1 : field.length === 4 ? 2 / 3 : 1 / 2;\n  return (\n    <div\n      className=\"relative\"\n      style={{ height: ratio * 180, width: ratio * 122 }}\n    >\n      {field.map((card, i) => (\n        <GoStopCard\n          key={i}\n          card={card}\n          width={90 * ratio}\n          style={{\n            position: \"absolute\",\n            top: i * 20 * gapRatio * ratio,\n            left: i * 16 * gapRatio * ratio,\n            borderRadius: 8 * ratio,\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default GoStop;\n","// Visualize a room where the game is started\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"redux-zero/react\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { BlockLoading } from \"react-loadingg\";\nimport { MdClose, MdLanguage } from \"react-icons/md\";\nimport { HiOutlineEye, HiOutlineEyeOff } from \"react-icons/hi\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport actions, { ActionTypes } from \"../actions\";\nimport { socket } from \"../socket\";\nimport { AppState } from \"../store\";\nimport { GameActionSelectMatch } from \"../types/game\";\nimport { Result, Message } from \"../types/server\";\nimport {\n  attachServerListener,\n  emitToServer,\n  getServerResponse,\n  removeServerListener,\n} from \"../utils/server\";\nimport GoStop from \"./GoStop\";\nimport TextButton from \"./TextButton\";\nimport IconButton from \"./IconButton\";\nimport CardButton from \"./CardButton\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useTranslation } from \"react-i18next\";\nimport { capitalize } from \"../utils/string\";\nimport Header from \"./Header\";\nimport { BiSave } from \"react-icons/bi\";\n\nconst RoomGameStarted: React.FC<\n  RouteComponentProps<{\n    roomId: string;\n  }> & { id: string } & AppState &\n    ActionTypes\n> = ({\n  id,\n  updateGame,\n  game,\n  clientId,\n  rooms,\n  roomId,\n  ...routeComponentProps\n}) => {\n  const { addToast } = useToasts();\n\n  // attach the spectate game listener\n  useEffect(() => {\n    const listener = (message: Result<Message[\"spectate game response\"]>) => {\n      if (message.success) {\n        updateGame(message.result);\n      }\n    };\n    emitToServer(\"spectate game\", { room: id });\n    attachServerListener(\"spectate game response\", listener);\n\n    return () => removeServerListener(\"spectate game response\", listener);\n  }, [id, updateGame]);\n\n  const { t, i18n } = useTranslation();\n\n  const isMyTurn = game && game.players[game.state.player] === clientId;\n  const [showLogs, setShowLogs] = useState(false);\n  const [showDialog, setShowDialog] = useState(false);\n  const [dialogContent, setDialogContent] = useState<React.ReactElement | null>(\n    null\n  );\n  const [peep, setPeep] = useState(false); // whether to peep the AlphaGoStop's cards or not\n\n  // the following effect will set the dialog component\n  // when some flags are set (so the player's additional action is needed)\n  useAsyncEffect(async () => {\n    if (!socket) return;\n    if (!game) return;\n    if (!isMyTurn) return;\n    if (!Object.values(game.flags).some((v: boolean) => v)) return;\n\n    if (game.flags.go) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Declare Go?\")}\n          </h2>\n          <div className=\"flex justify-center\">\n            <TextButton\n              style={{ minWidth: \"3em\", marginRight: \"2em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"go\", option: true },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"go\"))}</span>\n            </TextButton>\n            <TextButton\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"go\", option: false },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"stop\"))}</span>\n            </TextButton>\n          </div>\n        </>\n      );\n    } else if (game.flags.shaking) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Shake cards?\")}\n          </h2>\n          <div\n            style={{\n              maxWidth: \"calc(80% + 2em)\",\n              margin: \"auto\",\n              marginTop: \"2em\",\n            }}\n          >\n            <div\n              className=\"flex justify-between\"\n              style={{ maxWidth: \"14em\", margin: \"auto\" }}\n            >\n              {game.state.shaking![1].map((card) => (\n                <CardButton\n                  key={card}\n                  card={card}\n                  hoverEnabled={false}\n                  style={{ maxWidth: \"4em\", width: \"30%\", cursor: \"default\" }}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"flex justify-center mt-4\">\n            <TextButton\n              style={{ minWidth: \"3em\", marginRight: \"2em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"shaking\", option: true },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"yes\"))}</span>\n            </TextButton>\n            <TextButton\n              style={{ minWidth: \"3em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"shaking\", option: false },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"no\"))}</span>\n            </TextButton>\n          </div>\n        </>\n      );\n    } else if (game.flags.select_match) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Please Choose a Card to Capture.\")}\n          </h2>\n          <div\n            style={{\n              maxWidth: \"calc(80% + 2em)\",\n              margin: \"auto\",\n              marginTop: \"2em\",\n            }}\n          >\n            <div\n              className=\"flex justify-between\"\n              style={{ maxWidth: \"14em\", margin: \"auto\" }}\n            >\n              <CardButton\n                card={(game.actions[0] as GameActionSelectMatch).match}\n                style={{ maxWidth: \"6em\", width: \"40%\" }}\n                onClick={async () => {\n                  emitToServer(\"play\", {\n                    client: clientId!,\n                    action: {\n                      kind: \"select match\",\n                      match: (game.actions[0] as GameActionSelectMatch).match,\n                    },\n                  });\n                  setShowDialog(false);\n                  const playMessage = await getServerResponse(\"play response\");\n                  if (playMessage.success) {\n                    updateGame(playMessage.result);\n                  } else {\n                    setShowDialog(true);\n                    addToast(playMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n              />\n              <CardButton\n                card={(game.actions[1] as GameActionSelectMatch).match}\n                style={{ maxWidth: \"6em\", width: \"40%\" }}\n                onClick={async () => {\n                  emitToServer(\"play\", {\n                    client: clientId!,\n                    action: {\n                      kind: \"select match\",\n                      match: (game.actions[1] as GameActionSelectMatch).match,\n                    },\n                  });\n                  setShowDialog(false);\n                  const playMessage = await getServerResponse(\"play response\");\n                  if (playMessage.success) {\n                    updateGame(playMessage.result);\n                  } else {\n                    setShowDialog(true);\n                    addToast(playMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </>\n      );\n    } else if (game.flags.move_animal_9) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Use Animal of September As a Double Junk?\")}\n          </h2>\n          <div className=\"flex justify-center\">\n            <TextButton\n              style={{ minWidth: \"3em\", marginRight: \"2em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"move animal 9\", option: true },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"yes\"))}</span>\n            </TextButton>\n            <TextButton\n              style={{ minWidth: \"3em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"move animal 9\", option: false },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"no\"))}</span>\n            </TextButton>\n          </div>\n        </>\n      );\n    } else if (game.flags.four_of_a_month) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Finish the Game with Four-of-a-Month?\")}\n          </h2>\n          <div className=\"flex justify-center\">\n            <TextButton\n              style={{ minWidth: \"3em\", marginRight: \"2em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"four of a month\", option: true },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"yes\"))}</span>\n            </TextButton>\n            <TextButton\n              style={{ minWidth: \"3em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"four of a month\", option: false },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"no\"))}</span>\n            </TextButton>\n          </div>\n        </>\n      );\n    }\n  }, [socket, game, updateGame]);\n\n  const index = game?.players.findIndex((p) => p === clientId) as -1 | 0 | 1;\n  const involved = (!!clientId && game?.players.includes(clientId)) ?? false;\n\n  return game === null ? (\n    <div className=\"w-full h-full\">\n      <BlockLoading />\n    </div>\n  ) : (\n    <div\n      className=\"w-full h-full relative\"\n      style={{\n        backgroundColor: \"#3B7157\",\n      }}\n    >\n      <Header\n        style={{\n          position: \"relative\",\n          height: \"2em\",\n          zIndex: 20,\n        }}\n      >\n        <div className=\"flex justify-between\">\n          <div>\n            {\n              // show the end game button if the client is playing the game\n              involved && (\n                <TextButton\n                  dark\n                  size=\"sm\"\n                  onClick={async () => {\n                    if (!socket) return;\n                    if (!clientId) return;\n                    socket.emit(\"end game\", { client: clientId });\n                    const endGameMessage = await getServerResponse(\n                      \"end game response\"\n                    );\n                    if (!endGameMessage.success) {\n                      addToast(endGameMessage.error, {\n                        appearance: \"error\",\n                        autoDismiss: true,\n                      });\n                    }\n                  }}\n                >\n                  End Game\n                </TextButton>\n              )\n            }\n          </div>\n          <div className=\"flex\">\n            {\n              // show the peep button if one of the players is AlphaGoStop\n              !!rooms &&\n                rooms.find(\n                  (room) => room.id === routeComponentProps.match.params.roomId\n                )?.singlePlayer && (\n                  <IconButton\n                    className=\"mr-3\"\n                    onClick={() => {\n                      setPeep((s) => !s);\n                    }}\n                  >\n                    {peep ? (\n                      <HiOutlineEye color=\"rgba(255, 255, 255, 0.9)\" />\n                    ) : (\n                      <HiOutlineEyeOff color=\"rgba(255, 255, 255, 0.9)\" />\n                    )}\n                  </IconButton>\n                )\n            }\n            {/* show logs button */}\n            <IconButton\n              className=\"mr-3\"\n              onClick={() => {\n                setShowLogs((s) => !s);\n              }}\n            >\n              {showLogs ? (\n                <MdClose color=\"rgba(255, 255, 255, 0.9)\" />\n              ) : (\n                <IoIosArrowDown color=\"rgba(255, 255, 255, 0.9)\" />\n              )}\n            </IconButton>\n            {/* language change button */}\n            <IconButton\n              className=\"mr-3\"\n              onClick={() => {\n                i18n.changeLanguage(i18n.language !== \"ko\" ? \"ko\" : \"en\");\n              }}\n            >\n              <MdLanguage color=\"rgba(255, 255, 255, 0.9)\" />\n            </IconButton>\n            {/* save game state as a json button */}\n            <IconButton\n              onClick={() => {\n                const serializedGame = (({ board, flags, state }) => ({\n                  board,\n                  flags,\n                  state,\n                }))(game);\n                const dataString =\n                  \"data:text/json;charset=utf-8,\" +\n                  encodeURIComponent(JSON.stringify(serializedGame));\n                const downloadAnchorNode = document.createElement(\"a\");\n                downloadAnchorNode.setAttribute(\"href\", dataString);\n                downloadAnchorNode.setAttribute(\n                  \"download\",\n                  `game_${new Date().toISOString()}.json`\n                );\n                document.body.appendChild(downloadAnchorNode);\n                downloadAnchorNode.click();\n                downloadAnchorNode.remove();\n              }}\n            >\n              <BiSave color=\"rgba(255, 255, 255, 0.9)\" />\n            </IconButton>\n          </div>\n        </div>\n      </Header>\n      <div\n        className=\"w-full absolute bottom-0\"\n        style={{ height: \"calc(100% - 5em)\" }}\n      >\n        {/* show logs */}\n        {showLogs && (\n          <div\n            className=\"fixed right-0 top-0 text-xs overflow-y-auto z-20 bg-white text-white bg-opacity-25 p-4 rounded-xl\"\n            style={{\n              height: \"10rem\",\n              width: \"28rem\",\n              top: \"5rem\",\n              right: \"1rem\",\n            }}\n          >\n            <pre className=\"break-all whitespace-pre-wrap\">\n              {game.logs.join(\"\\n\")}\n            </pre>\n          </div>\n        )}\n        {/* Go-Stop game renderer */}\n        <GoStop\n          peep={peep}\n          game={game}\n          player={index === -1 ? null : index}\n          clientId={clientId}\n          roomId={roomId}\n          updateGame={updateGame}\n          {...routeComponentProps}\n        />\n        {/* show the dialog to grant an additional action */}\n        {showDialog && (\n          <div\n            className=\"w-full h-full flex place-items-center fixed z-10 top-0 left-0\"\n            style={{\n              backgroundColor: \"rgba(0, 0, 0, 0.45)\",\n            }}\n          >\n            <div className=\"p-8 bg-white rounded-2xl w-2/3 text-center m-auto\">\n              {dialogContent}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(RoomGameStarted);\n","// a text input component for typing client id\n\nimport React from \"react\";\n\ntype TextInputProps = {\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  className?: string;\n  style?: React.CSSProperties;\n  value?: string | number | readonly string[];\n  placeholder?: string;\n};\n\nconst TextInput: React.FC<TextInputProps> = (props) => {\n  return (\n    <input\n      {...props}\n      className={`shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${props.className}`}\n    />\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport { BiHome, BiLogIn, BiCalculator } from \"react-icons/bi\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { ActionTypes } from \"../actions\";\nimport { goToMyRoom } from \"../hooks\";\nimport { AppState } from \"../store\";\nimport IconButton from \"./IconButton\";\nimport TextInput from \"./TextInput\";\n\ntype HeaderContentsProps = Pick<RouteComponentProps, \"history\"> &\n  Pick<AppState, \"clientId\" | \"roomId\" | \"rooms\"> &\n  Pick<ActionTypes, \"updateClientId\" | \"updateRoomId\">;\n\nconst HeaderContents: React.FC<HeaderContentsProps> = ({\n  history,\n  clientId,\n  roomId,\n  rooms,\n  updateClientId,\n  updateRoomId,\n}) => {\n  const { addToast } = useToasts();\n  return (\n    <>\n      <div className=\"flex justify-between\">\n        <div className=\"flex\">\n          <IconButton className=\"mr-4\" onClick={() => history.push(\"/\")}>\n            <BiHome />\n          </IconButton>\n          <TextInput\n            className=\"w-64 my-1\"\n            style={{\n              maxWidth: !!roomId\n                ? \"calc(100vw - 14rem)\"\n                : \"calc(100vw - 10rem)\",\n            }}\n            placeholder=\"Client ID\"\n            value={clientId ?? \"\"}\n            onChange={(event) => {\n              updateClientId(event.target.value);\n            }}\n          />\n          {roomId && (\n            <IconButton\n              className=\"ml-4\"\n              onClick={goToMyRoom(\n                { history, clientId, roomId, rooms, updateRoomId, addToast },\n                false\n              )}\n            >\n              <BiLogIn />\n            </IconButton>\n          )}\n        </div>\n        <div>\n          <IconButton\n            className=\"ml-4\"\n            onClick={() => history.push(\"/estimate\")}\n          >\n            <BiCalculator />\n          </IconButton>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HeaderContents;\n","// a page component for `/rooms/${roomId}`\n\nimport React from \"react\";\nimport { Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"redux-zero/react\";\nimport actions, { ActionTypes } from \"../actions\";\nimport { AppState } from \"../store\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\nimport { BlockLoading } from \"react-loadingg\";\nimport IconButton from \"../components/IconButton\";\nimport { BiLogIn, BiLogOut } from \"react-icons/bi\";\nimport { BsPlayFill } from \"react-icons/bs\";\nimport Layout from \"../components/Layout\";\nimport Header from \"../components/Header\";\nimport { Room } from \"../types/server\";\nimport Table from \"../components/Table\";\nimport RoomGameStarted from \"../components/RoomGameStarted\";\nimport { useToasts } from \"react-toast-notifications\";\nimport HeaderContents from \"../components/HeaderContents\";\n\nconst Rooms: React.FC<\n  RouteComponentProps<{\n    roomId: string;\n  }> &\n    AppState &\n    ActionTypes\n> = (props) => {\n  const {\n    match,\n    rooms,\n    clientId,\n    updateClientId,\n    roomId,\n    updateRoomId,\n    history,\n    location,\n  } = props;\n  const { addToast } = useToasts();\n  const room: Room | null =\n    rooms?.find((room) => room.id === match.params.roomId) ?? null;\n\n  return rooms === null ? (\n    <Layout>\n      <BlockLoading />\n    </Layout>\n  ) : !room ? (\n    // if there is no such room, redirect to '/'\n    <Redirect to=\"/\" />\n  ) : !room.gameStarted ? (\n    <Layout>\n      <Header>\n        <HeaderContents\n          history={history}\n          clientId={clientId}\n          rooms={rooms}\n          roomId={roomId}\n          updateClientId={updateClientId}\n          updateRoomId={updateRoomId}\n        />\n      </Header>\n      <main>\n        {/* show some buttons */}\n        <h2 className=\"p-4 font-bold text-3xl text-gray-800 inline-flex\">\n          Room {match.params.roomId}\n          {roomId === match.params.roomId && clientId && (\n            <>\n              <IconButton\n                onClick={async () => {\n                  emitToServer(\"start game\", { client: clientId });\n                  const startGameMessage = await getServerResponse(\n                    \"start game response\"\n                  );\n                  if (!startGameMessage.success) {\n                    addToast(startGameMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n                className=\"ml-4\"\n              >\n                <BsPlayFill />\n              </IconButton>\n              <IconButton\n                onClick={async () => {\n                  emitToServer(\"exit room\", { client: clientId });\n                  const exitRoomMessage = await getServerResponse(\n                    \"exit room response\"\n                  );\n                  if (exitRoomMessage.success) {\n                    history.replace(\"/\");\n                  } else {\n                    addToast(exitRoomMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n                className=\"ml-4\"\n              >\n                <BiLogOut />\n              </IconButton>\n            </>\n          )}\n          {roomId !== match.params.roomId && clientId && (\n            <>\n              <IconButton\n                onClick={async () => {\n                  emitToServer(\"join room\", {\n                    client: clientId,\n                    room: match.params.roomId,\n                  });\n                  const joinRoomMessage = await getServerResponse(\n                    \"join room response\"\n                  );\n                  if (joinRoomMessage.success) {\n                    updateRoomId(room.id);\n                  } else {\n                    addToast(joinRoomMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n                className=\"ml-4\"\n              >\n                <BiLogIn />\n              </IconButton>\n            </>\n          )}\n        </h2>\n\n        {/* show the list of players */}\n        <Table.Wrapper>\n          <Table.Head>\n            <Table.Row>\n              <Table.Header>Player ID</Table.Header>\n            </Table.Row>\n          </Table.Head>\n          <Table.Body>\n            {rooms === null ? (\n              <Table.Row>\n                <Table.Data className=\"w-full\" colSpan={3}>\n                  <div className=\"h-24 relative\">\n                    <BlockLoading />\n                  </div>\n                </Table.Data>\n              </Table.Row>\n            ) : (\n              rooms\n                .find((room) => room.id === match.params.roomId)!\n                .players.map((player) => (\n                  <Table.Row key={player}>\n                    <Table.Data className=\"w-1/2\">\n                      <span className=\"text-gray-700 px-6 py-3 flex items-center\">\n                        {player}\n                      </span>\n                    </Table.Data>\n                  </Table.Row>\n                ))\n            )}\n          </Table.Body>\n        </Table.Wrapper>\n      </main>\n    </Layout>\n  ) : (\n    <RoomGameStarted\n      id={match.params.roomId}\n      history={history}\n      match={match}\n      location={location}\n    />\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(Rooms);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"redux-zero/react\";\nimport { BlockLoading } from \"react-loadingg\";\nimport { BiLogIn } from \"react-icons/bi\";\nimport { GrOverview } from \"react-icons/gr\";\n\nimport actions, { ActionTypes } from \"../actions\";\nimport { AppState } from \"../store\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\nimport IconButton from \"../components/IconButton\";\nimport Table from \"../components/Table\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { goToMyRoom } from \"../hooks\";\nimport Layout from \"../components/Layout\";\nimport Header from \"../components/Header\";\nimport { useToasts } from \"react-toast-notifications\";\nimport TextButton from \"../components/TextButton\";\nimport HeaderContents from \"../components/HeaderContents\";\n\ntype MainProps = AppState & ActionTypes;\nconst Main: React.FC<RouteComponentProps & MainProps> = ({\n  history,\n  clientId,\n  roomId,\n  rooms,\n  updateRoomId,\n  updateClientId,\n  updateRooms,\n}) => {\n  const { addToast } = useToasts();\n\n  useAsyncEffect(\n    goToMyRoom(\n      { history, clientId, roomId, rooms, updateRoomId, addToast },\n      true\n    ),\n    [roomId, clientId, history, rooms, updateRoomId]\n  );\n\n  return (\n    <Layout>\n      <Header>\n        <HeaderContents\n          history={history}\n          clientId={clientId}\n          rooms={rooms}\n          roomId={roomId}\n          updateClientId={updateClientId}\n          updateRoomId={updateRoomId}\n        />\n      </Header>\n      <main>\n        <h2 className=\"p-4 font-bold text-3xl text-gray-800\">Rooms</h2>\n\n        {/* list all existing rooms */}\n        <Table.Wrapper>\n          <Table.Head>\n            <Table.Row>\n              <Table.Header>Room ID</Table.Header>\n              <Table.Header># of Players</Table.Header>\n              <Table.Header></Table.Header>\n            </Table.Row>\n          </Table.Head>\n          <Table.Body>\n            {rooms === null ? (\n              <Table.Row>\n                <Table.Data className=\"w-full\" colSpan={3}>\n                  <div className=\"h-24 relative\">\n                    <BlockLoading />\n                  </div>\n                </Table.Data>\n              </Table.Row>\n            ) : (\n              rooms.map((room) => (\n                <Table.Row key={room.id}>\n                  <Table.Data className=\"w-1/2\">\n                    <span className=\"text-gray-700 px-6 py-3 flex items-center\">\n                      {room.id}\n                    </span>\n                  </Table.Data>\n                  <Table.Data className=\"w-1/4\">\n                    {room.gameStarted ? (\n                      <span className=\"text-gray-500 line-through px-6 py-3 flex items-center\">\n                        {room.players.length}/2\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-700 px-6 py-3 flex items-center\">\n                        {room.players.length}/2\n                      </span>\n                    )}\n                  </Table.Data>\n                  <Table.Data className=\"p-2 flex justify-end\">\n                    {!room.gameStarted && (\n                      <IconButton\n                        className=\"mr-3\"\n                        onClick={async () => {\n                          if (roomId === room.id) {\n                            history.push(`/rooms/${room.id}`);\n                            return;\n                          }\n                          if (roomId) {\n                            addToast(\"You are already in a different room.\", {\n                              appearance: \"error\",\n                              autoDismiss: true,\n                            });\n                            return;\n                          }\n                          if (!clientId) {\n                            addToast(\"You did not set the clientId yet.\", {\n                              appearance: \"error\",\n                              autoDismiss: true,\n                            });\n                            return;\n                          }\n\n                          emitToServer(\"join room\", {\n                            client: clientId,\n                            room: room.id,\n                          });\n                          const newRoomId = await getServerResponse(\n                            \"join room response\"\n                          );\n                          if (newRoomId.success) {\n                            updateRoomId(room.id);\n                            history.push(`/rooms/${room.id}`);\n                          } else {\n                            addToast(newRoomId.error, {\n                              appearance: \"error\",\n                              autoDismiss: true,\n                            });\n                          }\n                        }}\n                      >\n                        <BiLogIn />\n                      </IconButton>\n                    )}\n                    <IconButton\n                      onClick={() => {\n                        history.push(`/rooms/${room.id}`);\n                      }}\n                    >\n                      <GrOverview />\n                    </IconButton>\n                  </Table.Data>\n                </Table.Row>\n              ))\n            )}\n            {/* show the `make a room` button */}\n            <Table.Row>\n              <Table.Data className=\"w-full\" colSpan={3}>\n                <div className=\"h-24 flex items-center justify-center\">\n                  <TextButton\n                    onClick={async () => {\n                      if (roomId) {\n                        addToast(\"You are already in a different room.\", {\n                          appearance: \"error\",\n                          autoDismiss: true,\n                        });\n                        return;\n                      }\n                      if (!clientId) {\n                        addToast(\"You did not set the clientId yet.\", {\n                          appearance: \"error\",\n                          autoDismiss: true,\n                        });\n                        return;\n                      }\n\n                      emitToServer(\"make room\", { client: clientId });\n                      const newRoomId = await getServerResponse(\n                        \"make room response\"\n                      );\n                      if (newRoomId.success) {\n                        updateRooms([...(rooms ?? []), newRoomId.result]);\n                        updateRoomId(newRoomId.result.id);\n                        history.push(`/rooms/${newRoomId.result.id}`);\n                      } else {\n                        addToast(newRoomId.error, {\n                          appearance: \"error\",\n                          autoDismiss: true,\n                        });\n                      }\n                    }}\n                  >\n                    Make a room\n                  </TextButton>\n                </div>\n              </Table.Data>\n            </Table.Row>\n          </Table.Body>\n        </Table.Wrapper>\n      </main>\n    </Layout>\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(Main);\n","export function assert(condition: boolean, errorMessage?: any) {\n  if (!condition) {\n    throw new Error(errorMessage);\n  }\n}\n","import React from \"react\";\nimport { connect } from \"redux-zero/react\";\nimport actions from \"../actions\";\nimport Layout from \"../components/Layout\";\nimport { AppState } from \"../store\";\n\ntype NotFoundProps = {};\nconst NotFound: React.FC<NotFoundProps> = () => {\n  return (\n    <Layout>\n      <div className=\"flex w-full h-screen text-center place-items-center place-content-center\">\n        <span className=\"text-gray-500 font-bold\" style={{ fontSize: \"10em\" }}>\n          ∄\n        </span>\n      </div>\n    </Layout>\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(NotFound);\n","import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport { capitalize } from \"./utils/string\";\nimport { cardNameEn, cardNameKo, getMonthName } from \"./utils/card\";\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    debug: process.env.NODE_ENV !== \"production\",\n    interpolation: {\n      format: function (value, format, lng) {\n        if (format === \"uppercase\") return value.toUpperCase();\n        if (format === \"capitalize\") return capitalize(value);\n        if (format === \"card\")\n          return lng === \"ko\" ? cardNameKo(value) : cardNameEn(value);\n        if (format === \"month\")\n          return lng === \"ko\" ? `${parseInt(value)}월` : getMonthName(parseInt(value));\n        return value;\n      },\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React, { useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { connect } from \"redux-zero/react\";\nimport actions, { ActionTypes } from \"../actions\";\nimport Header from \"../components/Header\";\nimport HeaderContents from \"../components/HeaderContents\";\nimport Layout from \"../components/Layout\";\nimport TextButton from \"../components/TextButton\";\nimport i18n from \"../i18n\";\nimport { AppState } from \"../store\";\nimport { GameEssentials } from \"../types/game\";\nimport { postprocessPolicy } from \"../utils/game\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\nimport { roundFloat } from \"../utils/number\";\n\ntype EstimateProps = AppState & ActionTypes;\nconst Estimate: React.FC<RouteComponentProps & EstimateProps> = ({\n  history,\n  clientId,\n  updateClientId,\n  roomId,\n  rooms,\n  updateRoomId,\n}) => {\n  const { addToast } = useToasts();\n  const [estimate, setEstimate] = useState<{\n    policy: number[];\n    value: number;\n  } | null>(null);\n\n  const [content, setContent] = useState(\"\");\n\n  return (\n    <Layout>\n      <Header>\n        <HeaderContents\n          history={history}\n          clientId={clientId}\n          rooms={rooms}\n          roomId={roomId}\n          updateClientId={updateClientId}\n          updateRoomId={updateRoomId}\n        />\n      </Header>\n      <main>\n        <h2 className=\"p-4 font-bold text-3xl text-gray-800\">Estimate</h2>\n        <div className=\"overflow-x-auto bg-white rounded-lg shadow max-w-4xl m-auto box-content mx-4 overflow-hidden\">\n          {/* top bar region */}\n          <div\n            className=\"w-full px-4 py-3 relative text-center\"\n            style={{ minHeight: \"3rem\" }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"54\"\n              height=\"14\"\n              viewBox=\"0 0 54 14\"\n              className=\"absolute py-1 box-content\"\n              style={{\n                left: \"1rem\",\n              }}\n            >\n              <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(1 1)\">\n                <circle\n                  cx=\"6\"\n                  cy=\"6\"\n                  r=\"6\"\n                  fill=\"#FF5F56\"\n                  stroke=\"#E0443E\"\n                  strokeWidth=\".5\"\n                ></circle>\n                <circle\n                  cx=\"26\"\n                  cy=\"6\"\n                  r=\"6\"\n                  fill=\"#FFBD2E\"\n                  stroke=\"#DEA123\"\n                  strokeWidth=\".5\"\n                ></circle>\n                <circle\n                  cx=\"46\"\n                  cy=\"6\"\n                  r=\"6\"\n                  fill=\"#27C93F\"\n                  stroke=\"#1AAB29\"\n                  strokeWidth=\".5\"\n                ></circle>\n              </g>\n            </svg>\n            <div\n              className=\"text-gray-700 font-bold\"\n              style={{ margin: \"0 72px\" }}\n            >\n              Paste the serialized game (JSON file) into the text field below.\n            </div>\n          </div>\n          {/* code editor region */}\n          <CodeEditor value={content} onChange={(v) => setContent(v)} />\n          {/* bottom region */}\n          <div className=\"flex justify-end p-4\">\n            <TextButton\n              onClick={async () => {\n                let game: GameEssentials;\n                try {\n                  game = JSON.parse(content);\n                } catch {\n                  addToast(\"The JSON is invalid.\", {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                  return;\n                }\n                emitToServer(\"estimate game\", { game });\n                const estimateGameResult = await getServerResponse(\n                  \"estimate game response\"\n                );\n                if (estimateGameResult.success) {\n                  setEstimate(estimateGameResult.result);\n                } else {\n                  addToast(estimateGameResult.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                  return;\n                }\n              }}\n            >\n              Query to AI\n            </TextButton>\n          </div>\n        </div>\n        {/* show the estimation result */}\n        {!!estimate && (\n          <div\n            className=\"w-full h-full flex place-items-center fixed z-10 top-0 left-0\"\n            style={{\n              backgroundColor: \"rgba(0, 0, 0, 0.45)\",\n            }}\n          >\n            <div className=\"p-8 bg-white rounded-2xl w-2/3 text-center m-auto\">\n              <h3 className=\"font-black text-3xl text-gray-800 mb-3\">\n                Estimation: {roundFloat(estimate.value)} Points\n              </h3>\n              <div className=\"text-left pt-4\">\n                {postprocessPolicy(estimate.policy, i18n.language).map(\n                  ([i, a, p]) => (\n                    <div\n                      key={i}\n                      className={`flex ${\n                        i === 1 ? \"h-12 text-xl font-bold\" : \"h-10\"\n                      } my-4`}\n                    >\n                      <div className=\"w-20 pr-8 py-2 text-right\">{i}.</div>\n                      <div\n                        className=\"box-border p-2 relative\"\n                        style={{ width: \"calc(100% - 5rem)\" }}\n                      >\n                        <div\n                          className=\"absolute top-0 left-0 h-full bg-gray-300 rounded-xl\"\n                          style={{\n                            width: `${\n                              (parseFloat(p) /\n                                parseFloat(\n                                  postprocessPolicy(\n                                    estimate.policy,\n                                    i18n.language\n                                  )[0][2]\n                                )) *\n                              100\n                            }%`,\n                          }}\n                        ></div>\n                        <span className=\"relative z-10\">{a}</span>\n                        <span className=\"absolute right-0 mr-2 z-10\">{p}</span>\n                      </div>\n                    </div>\n                  )\n                )}\n              </div>\n              <div className=\"flex justify-end pt-4\">\n                <TextButton onClick={() => setEstimate(null)}>Close</TextButton>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n    </Layout>\n  );\n};\n\ninterface CodeEditorProps {\n  value: string;\n  onChange?: (e: string) => void;\n}\nconst CodeEditor: React.FC<CodeEditorProps> = ({ value, onChange }) => {\n  const defaultValue = React.useRef(value);\n\n  const handleInput = (e: React.ChangeEvent<HTMLDivElement>) => {\n    if (onChange) {\n      onChange(e.target.innerHTML);\n    }\n  };\n\n  return (\n    <div\n      contentEditable\n      className=\"w-full px-4 font-mono break-all overflow-y-auto whitespace-normal\"\n      style={{\n        minHeight: \"8rem\",\n        maxHeight: \"calc(100vh - 20rem)\",\n      }}\n      onInput={handleInput}\n      dangerouslySetInnerHTML={{ __html: defaultValue.current }}\n    />\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(Estimate);\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport { connect } from \"redux-zero/react\";\nimport useAsyncEffect from \"use-async-effect\";\n\nimport actions, { ActionTypes } from \"./actions\";\nimport { AppState } from \"./store\";\nimport Rooms from \"./pages/Rooms\";\nimport Main from \"./pages/Main\";\nimport {\n  attachServerListener,\n  emitToServer,\n  getServerResponse,\n  removeServerListener,\n} from \"./utils/server\";\nimport { assert } from \"./utils/test\";\nimport { Message, Result } from \"./types/server\";\nimport { socket } from \"./socket\";\nimport NotFound from \"./pages/NotFound\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Estimate from \"./pages/Estimate\";\n\ntype AppProps = AppState & ActionTypes;\n\nconst App: React.FC<AppProps> = ({\n  clientId,\n  updateClientId,\n  updateRoomId,\n  updateRooms,\n}) => {\n  const { addToast } = useToasts();\n\n  // preload images\n  useEffect(() => {\n    const images = [\n      ...[2, 4, 5, 6, 7, 8, 9, 10, 12].map(\n        (m) => `A${m.toString().padStart(2, \"0\")}`\n      ),\n      ...[1, 3, 8, 11, 12].map((m) => `B${m.toString().padStart(2, \"0\")}`),\n      ...[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n        .map((m) => `J${m.toString().padStart(2, \"0\")}`)\n        .map((s) => [s + \"0\", s + \"1\"])\n        .flat(),\n      ...[\"J110\", \"J111\", \"J112\", \"J120\"],\n      ...[1, 2, 3, 4, 5, 6, 7, 9, 10, 12].map(\n        (m) => `R${m.toString().padStart(2, \"0\")}`\n      ),\n      ...[\"bomb\", \"bonus2\", \"bonus3\", \"hidden\"],\n    ];\n    images.forEach((slug) => {\n      new Image().src = `/images/cards/${slug}.png`;\n    });\n  }, []);\n\n  // server check\n  useAsyncEffect(async () => {\n    if (!socket) return;\n    const welcomeMessage = await getServerResponse(\"connect response\");\n    if (welcomeMessage.success) {\n      try {\n        assert(welcomeMessage.result.split(\" \")[1].slice(0, -1) === socket.id);\n        console.info(\"Connected to the server.\");\n      } catch {\n        addToast(\"Socket id does not match\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } else {\n      addToast(welcomeMessage.error, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  }, [socket.connected]);\n\n  // initialize client id from the localStorage\n  useEffect(() => {\n    updateClientId(localStorage.getItem(\"clientId\") ?? \"\");\n  }, [updateClientId]);\n\n  // initialize my room whenever (socket and) clientId changes\n  useAsyncEffect(async () => {\n    if (!clientId) return;\n\n    emitToServer(\"my room\", { client: clientId });\n    const myRoomMessage = await getServerResponse(\"my room response\");\n    if (myRoomMessage.success) {\n      updateRoomId(myRoomMessage.result?.id ?? null);\n    } else {\n      addToast(myRoomMessage.error, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  }, [clientId]);\n\n  // update state.rooms on list rooms response\n  useEffect(() => {\n    emitToServer(\"list rooms\", {});\n\n    const listRoomsListener = (\n      message: Result<Message[\"list rooms response\"]>\n    ) => {\n      if (message.success) {\n        updateRooms(message.result);\n      }\n    };\n    attachServerListener(\"list rooms response\", listRoomsListener);\n\n    return () => {\n      removeServerListener(\"list rooms response\", listRoomsListener);\n    };\n  }, [updateRooms]);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/rooms/:roomId\" component={Rooms} />\n        <Route path=\"/rooms\" render={() => <Redirect to=\"/\" />} />\n        <Route\n          exact\n          path=\"/estimate\"\n          render={(props) => <Estimate {...props} />}\n        />\n        <Route exact path=\"/\" render={(props) => <Main {...props} />} />\n        <Route path=\"/\" render={(props) => <NotFound {...props} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","// define the global state\n\nimport createStore from \"redux-zero\";\nimport { Game } from \"./types/game\";\nimport { Room } from \"./types/server\";\n\nexport interface AppState {\n  clientId: string | null;\n  rooms: Room[] | null;\n  roomId: string | null;\n  game: Game | null;\n}\n\nconst initialState: AppState = {\n  clientId: null,\n  rooms: null,\n  roomId: null,\n  game: null,\n};\n\nconst store = createStore<AppState>(initialState);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { Provider } from \"redux-zero/react\";\nimport store from \"./store\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ToastProvider>\n      <App />\n    </ToastProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}