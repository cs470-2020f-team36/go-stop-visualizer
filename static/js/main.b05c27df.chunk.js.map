{"version":3,"sources":["actions.ts","socket.ts","utils/server.ts","components/IconButton.tsx","components/Layout.tsx","components/Header.tsx","components/TextInput.tsx","hooks/index.ts","components/Table.tsx","utils/card.ts","utils/game.ts","utils/string.ts","components/CardButton.tsx","components/TextButton.tsx","components/GoStop.tsx","components/RoomGameStarted.tsx","pages/Rooms.tsx","pages/Main.tsx","utils/test.ts","pages/NotFound.tsx","App.tsx","reportWebVitals.ts","store.ts","i18n.ts","index.tsx"],"names":["actions","store","updateClientId","state","clientId","localStorage","setItem","updateRooms","rooms","updateRoomId","roomId","updateGame","game","socket","io","emitToServer","id","data","a","emit","getServerResponse","Promise","resolve","once","attachServerListener","cb","on","removeServerListener","off","mapIconBaseSize","sm","base","lg","IconButton","props","size","restProps","className","Layout","children","Header","TextInput","goToMyRoom","onlyIfGameStarted","history","addToast","find","room","gameStarted","push","appearance","autoDismiss","client","myRoomMessage","success","result","error","Table","Wrapper","Head","Body","Row","Data","cardToImageSrc","card","startsWith","cardNameKo","parseInt","substring","month","ribbon","includes","index","multiple","getMonthName","hiddenHand","player","len","board","hands","length","shown","filter","shaking_histories","flat","Array","fill","capitalize","s","charAt","toUpperCase","slice","CardButton","anchorBottom","hoverEnabled","title","alt","src","style","borderRadius","xs","xl","TextButton","GameEnded","involved","players","useToasts","t","useTranslation","backgroundColor","winner","scores","kind","arg","go_histories","score_factors","map","factor","Math","pow","x","join","onClick","endGameMessage","startGameMessage","GoStopField","BASE_HEIGHT","windowSize","useState","width","height","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","ratio","min","bottom","top","padding","hand","turn","name","captureField","capture_fields","animal9Moved","animal_9_moved","score","go","stacking","stacking_histories","shaking","centerField","center_field","mine","GoStopNameCard","marginRight","fontSize","lineHeight","textAlign","position","GoStopScoreCard","marginLeft","fontFamily","whiteSpace","transform","GoStopCard","w","h","objectPosition","objectFit","GoStopHand","gap","color","minWidth","i","action","undefined","margin","playMessage","GoStopCaptureField","brightCards","animalCards","isGodoriMade","animalScore","max","ribbonCards","isRedRibbonMade","isPlantRibbonMade","isBlueRibbonMade","ribbonScore","junkCards","junkScore","reduce","b","pile","sizeOfChunk","number","isScore","GoStopCaptureFieldPile","horizontalGap","verticalGap","numberOfChunks","ceil","wrapperWidth","wrapperHeight","last","left","floor","border","fontWeight","GoStopCenterField","field","GoStopCenterFieldItem","gapRatio","GoStop","routeComponentProps","ended","connect","listener","message","i18n","isMyTurn","showLogs","setShowLogs","showDialog","setShowDialog","dialogContent","setDialogContent","useAsyncEffect","Object","values","flags","some","v","option","maxWidth","marginTop","cursor","select_match","match","move_animal_9","four_of_a_month","findIndex","p","changeLanguage","language","maxHeight","logs","params","placeholder","value","onChange","event","target","exitRoomMessage","setTimeout","replace","joinRoomMessage","colSpan","to","newRoomId","assert","condition","errorMessage","Error","m","toString","padStart","forEach","slug","Image","welcomeMessage","split","console","log","connected","getItem","listRoomsListener","path","component","Rooms","render","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","process","interpolation","format","lng","monthName","cardNameEn","escapeValue","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b05c27df.chunk.js","sourcesContent":["import Store from \"redux-zero/interfaces/Store\";\nimport { AppState } from \"./store\";\nimport { Game } from \"./types/game\";\nimport { Room } from \"./types/server\";\n\nconst updateClientId = (store: Store<AppState>) => (\n  state: AppState,\n  clientId: string\n) => {\n  localStorage.setItem(\"clientId\", clientId);\n  return { clientId } as Partial<AppState>;\n};\nconst updateRooms = (store: Store<AppState>) => (\n  state: AppState,\n  rooms: Room[]\n) => {\n  return { rooms } as Partial<AppState>;\n};\nconst updateRoomId = (store: Store<AppState>) => (\n  state: AppState,\n  roomId: string | null\n) => {\n  return { roomId } as Partial<AppState>;\n};\nconst updateGame = (store: Store<AppState>) => (\n  state: AppState,\n  game: Game | null\n) => {\n  return { game } as Partial<AppState>;\n};\ntype Voidify<T> = T extends (...params: infer R) => unknown\n  ? (...params: R) => void\n  : never;\ntype ActionsType = {\n  updateClientId: Voidify<ReturnType<typeof updateClientId>>;\n  updateRooms: Voidify<ReturnType<typeof updateRooms>>;\n  updateRoomId: Voidify<ReturnType<typeof updateRoomId>>;\n  updateGame: Voidify<ReturnType<typeof updateGame>>;\n};\n\nconst actions: (store: Store<AppState>) => ActionsType = (store) => ({\n  updateClientId: updateClientId(store),\n  updateRooms: updateRooms(store),\n  updateRoomId: updateRoomId(store),\n  updateGame: updateGame(store),\n});\n\ntype ConsumeState<T> = T extends (g: any, ...args: infer V) => infer W\n  ? (...args: V) => W\n  : unknown;\n\nexport type ActionTypes = {\n  [key in keyof ReturnType<typeof actions>]: ConsumeState<\n    ReturnType<typeof actions>[key]\n  >;\n};\n\nexport default actions;\n","import io from \"socket.io-client\";\n\nconst SERVER_URL = \"https://cs470-go-stop.herokuapp.com/\";\nexport const socket = io(SERVER_URL);\n","import { socket } from \"../socket\";\nimport { Message, Result } from \"../types/server\";\n\nexport async function emitToServer<T extends keyof Message>(\n  id: T,\n  data: Message[T]\n) {\n  socket.emit(id, data);\n}\n\nexport async function getServerResponse<T extends keyof Message>(\n  id: T\n): Promise<Result<Message[T]>> {\n  return new Promise((resolve) => {\n    socket.once(id, (data: Result<Message[T]>) => {\n      resolve(data);\n    });\n  });\n}\n\nexport function attachServerListener<T extends keyof Message>(\n  id: T,\n  cb: (data: Result<Message[T]>) => void\n) {\n  socket.on(id, cb);\n}\n\nexport function removeServerListener<T extends keyof Message>(\n  id: T,\n  cb?: (data: Result<Message[T]>) => void\n) {\n  socket.off(id, cb);\n}\n","import React from \"react\";\n\nconst mapIconBaseSize = {\n  sm: \"text-xl\",\n  base: \"text-2xl\",\n  lg: \"text-4xl\",\n};\n\ntype IconButtonProps = {\n  size?: keyof typeof mapIconBaseSize;\n  onClick?: React.MouseEventHandler;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nconst IconButton: React.FC<IconButtonProps> = (props) => {\n  const { size = \"base\", ...restProps } = props;\n  return (\n    <button\n      {...restProps}\n      className={`flex items-center justify-center p-3 rounded-full\n        disabled:bg-transparent hover:bg-gray-300 active:bg-gray-400 focus:bg-gray-400 \n        disabled:opacity-50 disabled:cursor-not-allowed \n        focus:outline-none focus:shadow-outline ${mapIconBaseSize[size]} ${\n        props.className ?? \"\"\n      }`}\n    />\n  );\n};\n\nexport default IconButton;\n","import React from \"react\";\n\nconst Layout: React.FC = ({ children }) => (\n  <div className=\"w-full bg-gray-200 min-h-full\">\n    <div className=\"max-w-4xl mx-auto text-gray-900 h-full\">{children} </div>\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\n\nconst Header: React.FC = ({ children }) => (\n  <header className=\"p-4\">{children}</header>\n);\n\nexport default Header;\n","import React from \"react\";\n\ntype TextInputProps = {\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  className?: string;\n  style?: React.CSSProperties;\n  value?: string | number | readonly string[];\n  placeholder?: string;\n};\n\nconst TextInput: React.FC<TextInputProps> = (props) => {\n  return (\n    <input\n      {...props}\n      className={`shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${props.className}`}\n    />\n  );\n};\n\nexport default TextInput;\n","import { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { AddToast } from \"react-toast-notifications\";\nimport { ActionTypes } from \"../actions\";\nimport { AppState } from \"../store\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\n\ntype GoToMyRoomProps = Pick<RouteComponentProps, \"history\"> &\n  Pick<AppState, \"clientId\" | \"roomId\" | \"rooms\"> &\n  Pick<ActionTypes, \"updateRoomId\"> & {\n    addToast: AddToast\n  };\n\nexport const goToMyRoom = (\n  { history, clientId, roomId, rooms, updateRoomId, addToast }: GoToMyRoomProps,\n  onlyIfGameStarted: boolean\n) => async () => {\n  if (roomId && rooms?.find((room) => room.id === roomId)?.gameStarted) {\n    history.push(`/rooms/${roomId}`);\n    addToast(\"There is a game going on.\", {\n      appearance: \"info\",\n      autoDismiss: true,\n    });\n    return;\n  }\n\n  if (!clientId) return;\n\n  emitToServer(\"my room\", { client: clientId });\n\n  const myRoomMessage = await getServerResponse(\"my room response\");\n  if (myRoomMessage.success) {\n    updateRoomId(myRoomMessage.result?.id ?? null);\n\n    if (\n      myRoomMessage.result?.id &&\n      (myRoomMessage.result?.gameStarted || !onlyIfGameStarted)\n    ) {\n      history.push(`/rooms/${myRoomMessage.result?.id}`);\n    }\n  } else {\n    addToast(myRoomMessage.error, {\n      appearance: \"info\",\n      autoDismiss: true,\n    });\n  }\n};\n\nexport function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: 32,\n    height: 32,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n}\n","import React from \"react\";\n\nconst Wrapper: React.FC = ({ children }) => (\n  <div className=\"overflow-x-auto bg-white rounded-lg shadow max-w-4xl m-auto box-content mx-4\">\n    <table className=\"border-collapse table-auto w-full whitespace-no-wrap bg-white table-striped relative\">\n      {children}\n    </table>\n  </div>\n);\nconst Head: React.FC = ({ children }) => <thead>{children}</thead>;\nconst Body: React.FC = ({ children }) => <tbody>{children}</tbody>;\nconst Row: React.FC<React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLTableRowElement>,\n  HTMLTableRowElement\n>> = ({ children, ...props }) => (\n  <tr {...props} className={`text-left ${props.className ?? \"\"}`}>\n    {children}\n  </tr>\n);\nconst Data: React.FC<React.DetailedHTMLProps<\n  React.TdHTMLAttributes<HTMLTableDataCellElement>,\n  HTMLTableDataCellElement\n>> = ({ children, ...props }) => (\n  <td\n    {...props}\n    className={`border-dashed border-t border-gray-200 ${\n      props.className ?? \"\"\n    }`}\n  >\n    {children}\n  </td>\n);\nconst Header: React.FC<React.DetailedHTMLProps<\n  React.ThHTMLAttributes<HTMLTableHeaderCellElement>,\n  HTMLTableHeaderCellElement\n>> = ({ children, ...props }) => (\n  <th\n    {...props}\n    className={`py-2 px-3 sticky top-0 border-b text-gray-700 border-gray-200 bg-gray-100 ${\n      props.className ?? \"\"\n    }`}\n  >\n    {children}\n  </th>\n);\n\nconst Table = {\n  Wrapper,\n  Head,\n  Body,\n  Row,\n  Data,\n  Header,\n};\n\nexport default Table;\n","import { Card } from \"../types/game\";\n\nexport function cardToImageSrc(card: Card) {\n  return `/images/cards/${\n    card.startsWith(\"?\")\n      ? \"hidden\"\n      : card.startsWith(\"*\")\n      ? \"bomb\"\n      : card.startsWith(\"+\")\n      ? `bonus${card[1]}`\n      : card\n  }.png`;\n}\n\nexport function cardNameKo(card: Card) {\n  if (card.startsWith(\"B\")) {\n    return `${parseInt(card.substring(1))}월 광`;\n  }\n  if (card.startsWith(\"A\")) {\n    return `${parseInt(card.substring(1))}월 열끗`;\n  }\n  if (card.startsWith(\"R\")) {\n    const month = parseInt(card.substring(1));\n    const ribbon = [1, 2, 3].includes(month)\n      ? \"홍\"\n      : [4, 5, 7].includes(month)\n      ? \"초\"\n      : [6, 9, 10].includes(month)\n      ? \"청\"\n      : null;\n    return `${month}월 띠${!ribbon ? \"\" : ` (${ribbon}단)`}`;\n  }\n  if (card.startsWith(\"J\")) {\n    const month = parseInt(card.substring(1, 3));\n    const index = parseInt(card.substring(3));\n    const multiple = index === 2 || month === 12 ? 2 : 1;\n    return `${month}월 ${multiple === 2 ? \"쌍\" : \"\"}피${\n      multiple === 2 ? \"\" : ` (${index})`\n    }`;\n  }\n  if (card.startsWith(\"+\")) {\n    const multiple = parseInt(card.substring(1));\n    return `보너스 ${multiple === 2 ? \"쌍\" : \"쓰리\"}피`;\n  }\n  if (card.startsWith(\"*\")) {\n    const index = parseInt(card.substring(1));\n    return `폭탄 (${index})`;\n  }\n  return \"숨겨진 패\";\n}\n\nexport function getMonthName(month: number) {\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  return months[month - 1];\n}\n\nexport function cardNameEn(card: Card) {\n  const month = parseInt(card.substring(1, 3));\n  const monthName = getMonthName(month);\n\n  if (card.startsWith(\"B\")) {\n    return `bright of ${monthName}`;\n  }\n  if (card.startsWith(\"A\")) {\n    return `animal of ${monthName}`;\n  }\n  if (card.startsWith(\"R\")) {\n    const ribbon = [1, 2, 3].includes(month)\n      ? \"red\"\n      : [4, 5, 7].includes(month)\n      ? \"blue\"\n      : [6, 9, 10].includes(month)\n      ? \"plant\"\n      : null;\n    return `ribbon of ${monthName}${!ribbon ? \"\" : ` (${ribbon})`}`;\n  }\n  if (card.startsWith(\"J\")) {\n    const month = parseInt(card.substring(1, 3));\n    const index = parseInt(card.substring(3));\n    const multiple = index === 2 || month === 12 ? 2 : 1;\n    return `${multiple === 2 ? \"double \" : \"\"}junk of ${monthName}${\n      multiple === 2 ? \"\" : ` (${index})`\n    }`;\n  }\n  if (card.startsWith(\"+\")) {\n    const multiple = parseInt(card.substring(1));\n    return `bonus card (${multiple === 2 ? \"+2\" : \"+3\"})`;\n  }\n  if (card.startsWith(\"*\")) {\n    const index = parseInt(card.substring(1));\n    return `bomb card (${index})`;\n  }\n  return \"hidden card\";\n}\n","import { Card, Game } from \"../types/game\";\n\nexport function hiddenHand(game: Game, player: 0 | 1): Card[] {\n  const len = game.board.hands[player].length;\n  const shown = game.board.hands[player].filter(\n    (card) =>\n      card.startsWith(\"*\") ||\n      game.state.shaking_histories[player].flat().includes(card)\n  );\n  return [...shown, ...Array(len - shown.length).fill(\"?\")];\n}\n","export function capitalize(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n","import React from \"react\";\nimport { Card } from \"../types/game\";\nimport { cardToImageSrc } from \"../utils/card\";\n\nimport \"./CardButton.css\";\n\ntype CardButtonProps = {\n  card?: Card;\n  onClick?: React.MouseEventHandler;\n  className?: string;\n  title?: string;\n  style?: React.CSSProperties;\n  anchorBottom?: boolean;\n  hoverEnabled?: boolean;\n};\n\nconst CardButton: React.FC<CardButtonProps> = (props) => {\n  const {\n    card = \"?\",\n    anchorBottom = false,\n    hoverEnabled = true,\n    title,\n    children,\n    ...restProps\n  } = props;\n  return (\n    <button\n      {...restProps}\n      className={`${hoverEnabled ? \"card-button\" : \"\"} ${\n        props.className ?? \"\"\n      } ${anchorBottom ? \"anchor-bottom\" : \"\"} ${\n        !hoverEnabled ? \"cursor-default\" : \"\"\n      }`}\n    >\n      <img\n        title={title}\n        alt={title}\n        src={cardToImageSrc(card)}\n        className=\"w-full h-full\"\n        style={{\n          borderRadius: 4,\n        }}\n      />\n    </button>\n  );\n};\n\nexport default CardButton;\n","import React from \"react\";\n\nconst mapIconBaseSize = {\n  xs: \"text-xs\",\n  sm: \"text-sm\",\n  base: \"text-base\",\n  lg: \"text-lg\",\n  xl: \"text-xl\",\n  \"2xl\": \"text-2xl\",\n};\n\ntype TextButtonProps = {\n  size?: keyof typeof mapIconBaseSize;\n  onClick?: React.MouseEventHandler;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nconst TextButton: React.FC<TextButtonProps> = (props) => {\n  const { size = \"base\", ...restProps } = props;\n  return (\n    <button\n      {...restProps}\n      className={`flex items-center justify-center p-3 rounded-full\n        disabled:bg-transparent hover:bg-gray-300 active:bg-gray-400 focus:bg-gray-400 \n        disabled:opacity-50 disabled:cursor-not-allowed \n        focus:outline-none focus:shadow-outline ${mapIconBaseSize[size]} ${\n        props.className ?? \"\"\n      }`}\n    />\n  );\n};\n\nexport default TextButton;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { GoTriangleRight } from \"react-icons/go\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useWindowSize } from \"../hooks\";\nimport { socket } from \"../socket\";\nimport { Card, Game, GameAction } from \"../types/game\";\nimport { cardNameKo, cardToImageSrc } from \"../utils/card\";\nimport { hiddenHand } from \"../utils/game\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\nimport { capitalize } from \"../utils/string\";\nimport CardButton from \"./CardButton\";\nimport TextButton from \"./TextButton\";\n\nconst GoStop: React.FC<\n  RouteComponentProps & {\n    game: Game;\n    player: 0 | 1 | null;\n    clientId: string | null;\n    roomId: string | null;\n    updateGame: (game: Game | null) => void;\n  }\n> = ({\n  game,\n  player,\n  clientId,\n  roomId,\n  updateGame,\n  ...routeComponentProps\n}) => {\n  return (\n    <div\n      className=\"w-full h-full flex place-items-center\"\n      style={{\n        backgroundColor: \"#3B7157\",\n      }}\n    >\n      <GoStopField game={game} player={player} clientId={clientId} />\n      {game.state.ended ? (\n        <GameEnded\n          game={game}\n          player={player}\n          clientId={clientId}\n          updateGame={updateGame}\n          roomId={roomId}\n          {...routeComponentProps}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst GameEnded: React.FC<\n  RouteComponentProps & {\n    game: Game;\n    player: 0 | 1 | null;\n    clientId: string | null;\n    roomId: string | null;\n    updateGame: (game: Game | null) => void;\n  }\n> = ({ game, player, clientId, roomId, updateGame, history }) => {\n  const involved = !!clientId && game.players.includes(clientId);\n  const { addToast } = useToasts();\n  const { t } = useTranslation();\n\n  return (\n    <div\n      className=\"w-full h-full flex place-items-center fixed z-10 top-0 left-0\"\n      style={{\n        backgroundColor: \"rgba(0, 0, 0, 0.45)\",\n      }}\n    >\n      <div className=\"p-8 bg-white rounded-2xl w-2/3 text-center m-auto\">\n        <h2 className=\"font-black text-3xl text-gray-800 mb-3\">\n          {game.state.winner === null\n            ? `🤔 ${capitalize(t(\"push back\"))}`\n            : game.state.winner === player\n            ? `🌟 ${capitalize(t(\"victory\"))}!`\n            : 1 - game.state.winner === player\n            ? `😥 ${capitalize(t(\"defeat\"))}...`\n            : `🏆 ${game.players[game.state.winner]}${t(\"'s\")} ${capitalize(\n                t(\"victory\")\n              )}!`}\n        </h2>\n        <p>\n          <span className=\"text-xl text-gray-800\">\n            {game.state.winner === null ? null : (\n              <>\n                {`${capitalize(t(\"total\"))} `}\n                <span className=\"font-bold\">\n                  {game.state.scores[game.state.winner]}\n                </span>\n                {`${t(\"points\")}`}\n              </>\n            )}\n          </span>\n        </p>\n        <p>\n          <span className=\"text-md text-gray-800\">\n            {game.state.winner === null\n              ? null\n              : [\n                  {\n                    kind: \"go-add\",\n                    arg: game.state.go_histories[game.state.winner].length,\n                  },\n                  ...game.state.score_factors[game.state.winner],\n                ]\n                  .map((factor) =>\n                    factor.kind === \"go-add\"\n                      ? factor.arg === 0\n                        ? null\n                        : `${capitalize(t(\"go\"))} ${factor.arg}${t(\"points\")}`\n                      : factor.kind === \"go\"\n                      ? factor.arg <= 2\n                        ? null\n                        : `${capitalize(t(\"go\"))} ${Math.pow(\n                            2,\n                            factor.arg - 2\n                          )}${t(\"multiples\")}`\n                      : factor.kind === \"bright\"\n                      ? factor.arg === 0\n                        ? null\n                        : `${capitalize(t(\"brights\"))} ${factor.arg}${t(\n                            \"points\"\n                          )}`\n                      : factor.kind === \"animal\"\n                      ? factor.arg < 5\n                        ? null\n                        : `${capitalize(t(\"animals\"))} ${factor.arg - 4}${t(\n                            \"points\"\n                          )}`\n                      : factor.kind === \"ribbon\"\n                      ? factor.arg < 5\n                        ? null\n                        : `${capitalize(t(\"ribbons\"))} ${factor.arg - 4}${t(\n                            \"points\"\n                          )}`\n                      : factor.kind === \"junk\"\n                      ? factor.arg < 10\n                        ? null\n                        : `${capitalize(t(\"junks\"))} ${factor.arg - 9}${t(\n                            \"points\"\n                          )}`\n                      : factor.kind === \"five birds\"\n                      ? `${capitalize(t(\"five birds\"))} 5${t(\"points\")}`\n                      : factor.kind === \"red ribbons\"\n                      ? `${capitalize(t(\"red ribbons\"))} 3${t(\"points\")}`\n                      : factor.kind === \"blue ribbons\"\n                      ? `${capitalize(t(\"blue ribbons\"))} 3${t(\"points\")}`\n                      : factor.kind === \"plant ribbons\"\n                      ? `${capitalize(t(\"plant ribbons\"))} 3${t(\"points\")}`\n                      : factor.kind === \"shaking\"\n                      ? factor.arg === 0\n                        ? null\n                        : `${capitalize(t(\"shaking\"))} ${Math.pow(\n                            2,\n                            factor.arg\n                          )}${t(\"multiples\")}`\n                      : factor.kind === \"bright penalty\"\n                      ? `${capitalize(t(\"bright penalty\"))} 2${t(\"multiples\")}`\n                      : factor.kind === \"animal penalty\"\n                      ? `${capitalize(t(\"animal penalty\"))} 2${t(\"multiples\")}`\n                      : factor.kind === \"junk penalty\"\n                      ? `${capitalize(t(\"junk penalty\"))} 2${t(\"multiples\")}`\n                      : factor.kind === \"go penalty\"\n                      ? `${capitalize(t(\"go penalty\"))} 2${t(\"multiples\")}`\n                      : factor.kind === \"four of a month\"\n                      ? `${capitalize(t(\"four of a month\"))} 10${t(\"points\")}`\n                      : `${capitalize(t(\"three stackings\"))} 10${t(\"points\")}`\n                  )\n                  .filter((x) => x !== null)\n                  .join(\", \")}\n          </span>\n        </p>\n        <p>\n          {involved ? (\n            <div className=\"flex\">\n              <TextButton\n                className=\"m-auto mt-4\"\n                onClick={async () => {\n                  if (!socket) return;\n                  if (!clientId) return;\n\n                  updateGame(null);\n\n                  emitToServer(\"end game\", { client: clientId });\n                  const endGameMessage = await getServerResponse(\n                    \"end game response\"\n                  );\n                  if (!endGameMessage.success) {\n                    addToast(endGameMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                    return;\n                  }\n\n                  emitToServer(\"start game\", { client: clientId });\n                  const startGameMessage = await getServerResponse(\n                    \"start game response\"\n                  );\n                  if (!startGameMessage.success) {\n                    addToast(startGameMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n              >\n                {capitalize(t(\"new games\"))}\n              </TextButton>\n              <TextButton\n                className=\"m-auto mt-4\"\n                onClick={async () => {\n                  if (!socket) return;\n                  if (!clientId) return;\n                  if (!roomId) return;\n\n                  updateGame(null);\n\n                  emitToServer(\"end game\", { client: clientId });\n                  const endGameMessage = await getServerResponse(\n                    \"end game response\"\n                  );\n                  if (!endGameMessage.success) {\n                    addToast(endGameMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                    return;\n                  }\n\n                  if (history) {\n                    history.push(`/rooms/${roomId}`);\n                  }\n                }}\n              >\n                {capitalize(t(\"return to room\"))}\n              </TextButton>\n            </div>\n          ) : null}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst GoStopField: React.FC<{\n  game: Game;\n  player: 0 | 1 | null;\n  clientId: string | null;\n}> = ({ game, player, clientId }) => {\n  const BASE_WIDTH = 1258;\n  const BASE_HEIGHT = 1327 + (player === null ? -53 : 0);\n\n  const windowSize = useWindowSize();\n  const ratio = Math.min(\n    (windowSize.width - 32) / BASE_WIDTH,\n    (windowSize.height - 32) / BASE_HEIGHT\n  );\n  const bottom = player ?? 1;\n  const top = bottom === 0 ? 1 : 0;\n\n  return (\n    <div\n      className=\"m-auto\"\n      style={{\n        width: ratio * BASE_WIDTH + 32,\n        height: ratio * BASE_HEIGHT + 32,\n        padding: 16,\n      }}\n    >\n      <GoStopHand\n        ratio={ratio}\n        hand={hiddenHand(game, top)}\n        clientId={clientId}\n        turn={game.state.player === top}\n      />\n      <div style={{ height: ratio * 32 }} />\n\n      <div className=\"flex justify-center\" style={{ height: ratio * 189 }}>\n        <GoStopNameCard ratio={ratio} name={game.players[top]} />\n        <GoStopCaptureField\n          captureField={game.board.capture_fields[top]}\n          animal9Moved={game.state.animal_9_moved}\n          ratio={ratio}\n        />\n        <GoStopScoreCard\n          ratio={ratio}\n          score={game.state.scores[top]}\n          go={game.state.go_histories[top].length}\n          stacking={game.state.stacking_histories[top].length}\n          shaking={game.state.shaking_histories[top].length}\n        />\n      </div>\n      <div style={{ height: ratio * 96 }} />\n      <GoStopCenterField centerField={game.board.center_field} ratio={ratio} />\n      <div style={{ height: ratio * 96 }} />\n      <div className=\"flex justify-center\" style={{ height: ratio * 189 }}>\n        <GoStopNameCard ratio={ratio} name={game.players[bottom]} />\n        <GoStopCaptureField\n          captureField={game.board.capture_fields[bottom]}\n          animal9Moved={game.state.animal_9_moved}\n          ratio={ratio}\n        />\n        <GoStopScoreCard\n          ratio={ratio}\n          score={game.state.scores[bottom]}\n          go={game.state.go_histories[bottom].length}\n          stacking={game.state.stacking_histories[bottom].length}\n          shaking={game.state.shaking_histories[bottom].length}\n        />\n      </div>\n      <div style={{ height: ratio * 32 }} />\n      <GoStopHand\n        ratio={ratio}\n        hand={\n          player !== null ? game.board.hands[bottom] : hiddenHand(game, bottom)\n        }\n        mine={player !== null}\n        actions={game.state.player === player ? game.actions : []}\n        clientId={clientId}\n        turn={game.state.player === bottom}\n      />\n    </div>\n  );\n};\n\nconst GoStopNameCard: React.FC<{ ratio: number; name: string }> = ({\n  ratio,\n  name,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div\n      style={{\n        width: ratio * 106,\n        marginRight: ratio * 40,\n        height: ratio * 90 * 1.618,\n        fontSize: 24 * ratio,\n        padding: 8 * ratio,\n        lineHeight: 1.1,\n        borderRadius: 8 * ratio,\n        backgroundColor: \"#29604D\",\n        textAlign: \"center\",\n        position: \"relative\",\n      }}\n      className=\"text-white\"\n    >\n      <div\n        style={{\n          height: ratio * 90,\n          backgroundColor: \"white\",\n          borderRadius: 8 * ratio,\n        }}\n      >\n        <img\n          src=\"https://i1.wp.com/similarpng.com/wp-content/plugins/userswp/assets/images/no_profile.png\"\n          style={{\n            width: ratio * 90,\n            height: ratio * 90,\n            borderRadius: 8 * ratio,\n          }}\n          className=\"object-cover object-center\"\n          alt={`${name}${t(\"'s\")} ${t(\"profile image\")}`}\n        />\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: 8 * ratio,\n          width: ratio * 90,\n        }}\n        className=\"truncate\"\n      >\n        {name}\n      </div>\n    </div>\n  );\n};\n\nconst GoStopScoreCard: React.FC<{\n  ratio: number;\n  score: number;\n  go: number;\n  stacking: number;\n  shaking: number;\n}> = ({ ratio, score, go, stacking, shaking }) => {\n  const { t } = useTranslation();\n  return (\n    <div\n      style={{\n        width: ratio * 106,\n        marginLeft: ratio * 40,\n        height: ratio * 90 * 1.618,\n        fontSize: 24 * ratio,\n        padding: 8 * ratio,\n        lineHeight: 1.1,\n        borderRadius: 8 * ratio,\n        backgroundColor: \"#29604D\",\n        fontFamily: \"sans-serif\",\n        textAlign: \"left\",\n      }}\n      className=\"text-white\"\n    >\n      <div\n        style={{\n          fontSize: score > 99999 ? \"1em\" : score > 9999 ? \"1.1em\" : \"1.3em\",\n          textAlign: \"center\",\n          lineHeight: `${48 * ratio}px`,\n          whiteSpace: \"nowrap\",\n          width: \"min-content\",\n          marginLeft: \"50%\",\n          transform: \"translateX(-50%)\",\n          padding: `0 ${8 * ratio}px`,\n          borderRadius: 8 * ratio,\n        }}\n        className=\"font-bold text-right\"\n      >\n        {score}\n        {t(\"pt\")}\n      </div>\n      <div style={{ marginLeft: 15 * ratio, width: 60 * ratio }}>\n        🔥 <span className=\"font-black float-right\">{go}</span>\n      </div>\n      <div style={{ marginLeft: 15 * ratio, width: 60 * ratio }}>\n        💩 <span className=\"font-black float-right\">{stacking}</span>\n      </div>\n      <div style={{ marginLeft: 15 * ratio, width: 60 * ratio }}>\n        🔔 <span className=\"font-black float-right\">{shaking}</span>\n      </div>\n    </div>\n  );\n};\n\nconst GoStopCard: React.FC<{\n  card: Card;\n  width?: number;\n  height?: number;\n  alt?: string;\n  title?: string;\n  style?: React.CSSProperties;\n  onClick?: React.MouseEventHandler;\n  className?: string;\n}> = ({\n  card,\n  width: w,\n  height: h,\n  alt,\n  title,\n  style = {},\n  className,\n  onClick,\n}) => {\n  const { width, height } =\n    !w && !h\n      ? { width: 68, height: 105 }\n      : !w && !!h\n      ? { width: (68 / 105) * h, height: h }\n      : !!w && !h\n      ? { width: w, height: (w * 105) / 68 }\n      : { width: w, height: h };\n  return (\n    <img\n      src={cardToImageSrc(card)}\n      style={{\n        width,\n        height,\n        objectPosition: \"center\",\n        objectFit: \"cover\",\n        ...style,\n      }}\n      alt={alt ?? cardNameKo(card)}\n      title={title}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nconst GoStopHand: React.FC<{\n  hand: Card[];\n  mine?: boolean;\n  actions?: GameAction[];\n  ratio: number;\n  style?: React.CSSProperties;\n  clientId: string | null;\n  turn: boolean;\n}> = ({\n  hand,\n  mine = false,\n  actions = [],\n  ratio,\n  style = {},\n  turn,\n  clientId,\n}) => {\n  const { addToast } = useToasts();\n  const { t } = useTranslation();\n  const width = mine ? 100 * ratio : 68 * ratio;\n  const height = mine ? 154 * ratio : 105 * ratio;\n  const gap = mine ? 12 * ratio : 8 * ratio;\n  return (\n    <div className=\"flex w-full place-content-center\">\n      <div\n        style={{\n          width: mine ? 54 * ratio : 40 * ratio,\n          height: height + 2 * gap,\n          lineHeight: 1,\n        }}\n        className=\"flex items-center\"\n      >\n        {turn && hand.length > 0 && (\n          <GoTriangleRight\n            size={mine ? 40 * ratio : 32 * ratio}\n            color=\"white\"\n          />\n        )}\n      </div>\n      <div\n        className=\"flex\"\n        style={{\n          padding: gap / 2,\n          backgroundColor: hand.length === 0 ? \"transparent\" : \"#29604D\",\n          borderRadius: 8 * ratio,\n          marginRight: mine ? 54 * ratio : 40 * ratio,\n          minWidth: 16 * ratio + 2 * gap,\n          height: height + 2 * gap,\n          ...style,\n        }}\n      >\n        {hand.map((card, i) => {\n          const action = !mine\n            ? undefined\n            : actions.find(\n                (action) =>\n                  (action.kind === \"throw\" && action.card === card) ||\n                  (action.kind === \"throw bomb\" && card.startsWith(\"*\")) ||\n                  (action.kind === \"bomb\" &&\n                    [\"B\", \"A\", \"R\", \"J\"].includes(card[0]) &&\n                    action.month === parseInt(card.substring(1, 3), 10)) ||\n                  (action.kind === \"shakable\" && action.card === card)\n              );\n          const title = !action\n            ? undefined\n            : action.kind === \"throw\"\n            ? capitalize(t(\"throw the card\", { card }))\n            : action.kind === \"throw bomb\"\n            ? capitalize(t(\"throw a bomb card\"))\n            : action.kind === \"bomb\"\n            ? capitalize(t(\"throw a bomb of\", { month: action.month }))\n            : capitalize(\n                t(\"shake with\", { card, month: card.substring(1, 3) })\n              );\n          return (\n            <CardButton\n              key={i}\n              card={card}\n              style={{\n                width,\n                margin: gap / 2,\n                borderRadius: 4 * ratio,\n              }}\n              title={title}\n              hoverEnabled={mine}\n              anchorBottom\n              className={\n                !mine\n                  ? \"\"\n                  : actions.length === 0\n                  ? \"cursor-not-allowed\"\n                  : \"cursor-pointer\"\n              }\n              onClick={\n                !mine\n                  ? undefined\n                  : async () => {\n                      if (!action) return;\n                      socket.emit(\"play\", { client: clientId, action });\n                      const playMessage = await getServerResponse(\n                        \"play response\"\n                      );\n                      if (!playMessage.success) {\n                        addToast(playMessage.error, {\n                          appearance: \"error\",\n                          autoDismiss: true,\n                        });\n                      }\n                    }\n              }\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst GoStopCaptureField: React.FC<{\n  captureField: Card[];\n  animal9Moved: boolean | null;\n  ratio: number;\n  style?: React.CSSProperties;\n}> = ({ captureField, animal9Moved, ratio, style }) => {\n  const brightCards = captureField.filter((card) => card.startsWith(\"B\"));\n  const animalCards = captureField.filter(\n    (card) => card.startsWith(\"A\") && (!animal9Moved || card !== \"A09\")\n  );\n  const isGodoriMade =\n    animalCards.includes(\"A02\") &&\n    animalCards.includes(\"A04\") &&\n    animalCards.includes(\"A08\");\n  const animalScore =\n    Math.max(animalCards.length - 4, 0) + (isGodoriMade ? 5 : 0);\n  const ribbonCards = captureField.filter((card) => card.startsWith(\"R\"));\n  const isRedRibbonMade =\n    ribbonCards.includes(\"R01\") &&\n    ribbonCards.includes(\"R02\") &&\n    ribbonCards.includes(\"R03\");\n  const isPlantRibbonMade =\n    ribbonCards.includes(\"R04\") &&\n    ribbonCards.includes(\"R05\") &&\n    ribbonCards.includes(\"R07\");\n  const isBlueRibbonMade =\n    ribbonCards.includes(\"R06\") &&\n    ribbonCards.includes(\"R09\") &&\n    ribbonCards.includes(\"R10\");\n  const ribbonScore =\n    Math.max(ribbonCards.length - 4, 0) +\n    (isBlueRibbonMade ? 3 : 0) +\n    (isPlantRibbonMade ? 3 : 0) +\n    (isRedRibbonMade ? 3 : 0);\n\n  const junkCards = captureField.filter(\n    (card) =>\n      card.startsWith(\"J\") ||\n      card.startsWith(\"+\") ||\n      (!!animal9Moved && card === \"A09\")\n  );\n  const junkScore = junkCards\n    .map((card) =>\n      card.startsWith(\"J\")\n        ? card === \"J110\" || card === \"J111\"\n          ? 1\n          : card === \"J120\" || card === \"J112\"\n          ? 2\n          : 1\n        : card === \"A09\"\n        ? 2\n        : card === \"+2\"\n        ? 2\n        : card === \"+3\"\n        ? 3\n        : 0\n    )\n    .reduce((a: number, b: number) => a + b, 0);\n\n  return (\n    <>\n      <GoStopCaptureFieldPile\n        pile={brightCards}\n        sizeOfChunk={5}\n        ratio={ratio}\n        style={{ marginRight: 40 * ratio }}\n        number={\n          brightCards.length < 3\n            ? brightCards.length\n            : brightCards.length === 5\n            ? 15\n            : brightCards.length === 4\n            ? 4\n            : brightCards.includes(\"B12\")\n            ? 2\n            : 3\n        }\n        isScore={brightCards.length >= 3}\n      />\n      <GoStopCaptureFieldPile\n        pile={animalCards}\n        ratio={ratio}\n        style={{ marginRight: 40 * ratio }}\n        number={animalScore > 0 ? animalScore : animalCards.length}\n        isScore={animalScore > 0}\n      />\n      <GoStopCaptureFieldPile\n        pile={ribbonCards}\n        ratio={ratio}\n        style={{ marginRight: 40 * ratio }}\n        number={ribbonScore > 0 ? ribbonScore : ribbonCards.length}\n        isScore={ribbonScore > 0}\n      />\n      <GoStopCaptureFieldPile\n        pile={junkCards}\n        sizeOfChunk={8}\n        ratio={ratio}\n        style={{ marginRight: 40 * ratio }}\n        number={junkScore > 9 ? junkScore - 9 : junkScore}\n        isScore={junkScore > 9}\n      />\n    </>\n  );\n};\n\nconst GoStopCaptureFieldPile: React.FC<{\n  pile: Card[];\n  ratio: number;\n  number: number;\n  isScore: boolean;\n  sizeOfChunk?: number;\n  style?: React.CSSProperties;\n}> = ({ pile, ratio, number, isScore, sizeOfChunk = 3, style = {} }) => {\n  const width = 68 * ratio;\n  const height = 105 * ratio;\n  const horizontalGap = 24 * ratio;\n  const verticalGap = 28 * ratio;\n  const numberOfChunks = Math.ceil(pile.length / sizeOfChunk);\n  const wrapperWidth = width + (sizeOfChunk - 1) * horizontalGap;\n  const wrapperHeight = height + (numberOfChunks - 1) * verticalGap;\n  const last = pile.length - 1;\n  return (\n    <div\n      style={{\n        width: wrapperWidth,\n        height: wrapperHeight,\n        position: \"relative\",\n        ...style,\n      }}\n    >\n      {pile.map((card, i) => (\n        <GoStopCard\n          key={i}\n          card={card}\n          width={width}\n          style={{\n            position: \"absolute\",\n            left: (i % sizeOfChunk) * horizontalGap,\n            top: Math.floor(i / sizeOfChunk) * verticalGap,\n            borderRadius: 4 * ratio,\n          }}\n        />\n      ))}\n      {pile.length === 0 ? null : (\n        <div\n          className=\"absolute\"\n          style={{\n            width: 40 * ratio,\n            height: 40 * ratio,\n            left: (last % sizeOfChunk) * horizontalGap + width - 40 * ratio,\n            top:\n              Math.floor(last / sizeOfChunk) * verticalGap +\n              height -\n              40 * ratio,\n            backgroundColor: \"white\",\n            border: `${4 * ratio}px solid ${isScore ? \"#262C34\" : \"#4f5257\"}`,\n            color: isScore ? \"#262C34\" : \"#65676b\",\n            fontWeight: isScore ? \"bold\" : \"normal\",\n            borderRadius: 8 * ratio,\n            fontSize: 28 * ratio,\n            lineHeight: `${32 * ratio}px`,\n            textAlign: \"center\",\n          }}\n        >\n          {number}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst GoStopCenterField: React.FC<{\n  centerField: Game[\"board\"][\"center_field\"];\n  ratio: number;\n  style?: React.CSSProperties;\n}> = ({ centerField, ratio, style = {} }) => {\n  return (\n    <div className=\"flex\" style={{ height: ratio * 392, ...style }}>\n      <div\n        className=\"flex flex-wrap justify-between\"\n        style={{ height: ratio * 446, width: ratio * 428 }}\n      >\n        <GoStopCenterFieldItem field={centerField[\"1\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"2\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"3\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"7\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"8\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"9\"]} ratio={ratio} />\n      </div>\n      <div\n        className=\"flex justify-center items-center\"\n        style={{ height: ratio * 392, width: ratio * 290 }}\n      >\n        <GoStopCard\n          card=\"?\"\n          width={90 * ratio}\n          style={{ borderRadius: 8 * ratio }}\n        />\n      </div>\n      <div\n        className=\"flex flex-wrap justify-between\"\n        style={{ height: ratio * 446, width: ratio * 428 }}\n      >\n        <GoStopCenterFieldItem field={centerField[\"4\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"5\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"6\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"10\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"11\"]} ratio={ratio} />\n        <GoStopCenterFieldItem field={centerField[\"12\"]} ratio={ratio} />\n      </div>\n    </div>\n  );\n};\nconst GoStopCenterFieldItem: React.FC<{\n  field?: Card[];\n  ratio: number;\n  style?: React.CSSProperties;\n}> = ({ field = [], ratio, style }) => {\n  const gapRatio = field.length <= 3 ? 1 : field.length === 4 ? 2 / 3 : 1 / 2;\n  return (\n    <div\n      className=\"relative\"\n      style={{ height: ratio * 180, width: ratio * 122 }}\n    >\n      {field.map((card, i) => (\n        <GoStopCard\n          key={i}\n          card={card}\n          width={90 * ratio}\n          style={{\n            position: \"absolute\",\n            top: i * 20 * gapRatio * ratio,\n            left: i * 16 * gapRatio * ratio,\n            borderRadius: 8 * ratio,\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default GoStop;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"redux-zero/react\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { BlockLoading } from \"react-loadingg\";\nimport { MdClose, MdLanguage } from \"react-icons/md\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport actions, { ActionTypes } from \"../actions\";\nimport { socket } from \"../socket\";\nimport { AppState } from \"../store\";\nimport { GameActionSelectMatch } from \"../types/game\";\nimport { Result, Message } from \"../types/server\";\nimport {\n  attachServerListener,\n  emitToServer,\n  getServerResponse,\n  removeServerListener,\n} from \"../utils/server\";\nimport GoStop from \"./GoStop\";\nimport TextButton from \"./TextButton\";\nimport IconButton from \"./IconButton\";\nimport CardButton from \"./CardButton\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useTranslation } from \"react-i18next\";\nimport { capitalize } from \"../utils/string\";\n\nconst RoomGameStarted: React.FC<\n  RouteComponentProps & { id: string } & AppState & ActionTypes\n> = ({ id, updateGame, game, clientId, roomId, ...routeComponentProps }) => {\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const listener = (message: Result<Message[\"spectate game response\"]>) => {\n      if (message.success) {\n        updateGame(message.result);\n      }\n    };\n    emitToServer(\"spectate game\", { room: id });\n    attachServerListener(\"spectate game response\", listener);\n\n    return () => removeServerListener(\"spectate game response\", listener);\n  }, [id, updateGame]);\n\n  const { t, i18n } = useTranslation();\n\n  const isMyTurn = game && game.players[game.state.player] === clientId;\n  const [showLogs, setShowLogs] = useState(false);\n  const [showDialog, setShowDialog] = useState(false);\n  const [dialogContent, setDialogContent] = useState<React.ReactElement | null>(\n    null\n  );\n\n  useAsyncEffect(async () => {\n    if (!socket) return;\n    if (!game) return;\n    if (!isMyTurn) return;\n    if (!Object.values(game.flags).some((v: boolean) => v)) return;\n\n    if (game.flags.go) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Declare Go?\")}\n          </h2>\n          <div className=\"flex justify-center\">\n            <TextButton\n              style={{ minWidth: \"3em\", marginRight: \"2em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"go\", option: true },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"go\"))}</span>\n            </TextButton>\n            <TextButton\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"go\", option: false },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"stop\"))}</span>\n            </TextButton>\n          </div>\n        </>\n      );\n    } else if (game.flags.shaking) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Shake cards?\")}\n          </h2>\n          <div\n            style={{\n              maxWidth: \"calc(80% + 2em)\",\n              margin: \"auto\",\n              marginTop: \"2em\",\n            }}\n          >\n            <div\n              className=\"flex justify-between\"\n              style={{ maxWidth: \"14em\", margin: \"auto\" }}\n            >\n              {game.state.shaking![1].map((card) => (\n                <CardButton\n                  key={card}\n                  card={card}\n                  hoverEnabled={false}\n                  style={{ maxWidth: \"4em\", width: \"30%\", cursor: \"default\" }}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"flex justify-center mt-4\">\n            <TextButton\n              style={{ minWidth: \"3em\", marginRight: \"2em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"shaking\", option: true },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"yes\"))}</span>\n            </TextButton>\n            <TextButton\n              style={{ minWidth: \"3em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"shaking\", option: false },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"no\"))}</span>\n            </TextButton>\n          </div>\n        </>\n      );\n    } else if (game.flags.select_match) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Please Choose a Card to Capture.\")}\n          </h2>\n          <div\n            style={{\n              maxWidth: \"calc(80% + 2em)\",\n              margin: \"auto\",\n              marginTop: \"2em\",\n            }}\n          >\n            <div\n              className=\"flex justify-between\"\n              style={{ maxWidth: \"14em\", margin: \"auto\" }}\n            >\n              <CardButton\n                card={(game.actions[0] as GameActionSelectMatch).match}\n                style={{ maxWidth: \"6em\", width: \"40%\" }}\n                onClick={async () => {\n                  emitToServer(\"play\", {\n                    client: clientId!,\n                    action: {\n                      kind: \"select match\",\n                      match: (game.actions[0] as GameActionSelectMatch).match,\n                    },\n                  });\n                  setShowDialog(false);\n                  const playMessage = await getServerResponse(\"play response\");\n                  if (playMessage.success) {\n                    updateGame(playMessage.result);\n                  } else {\n                    setShowDialog(true);\n                    addToast(playMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n              />\n              <CardButton\n                card={(game.actions[1] as GameActionSelectMatch).match}\n                style={{ maxWidth: \"6em\", width: \"40%\" }}\n                onClick={async () => {\n                  emitToServer(\"play\", {\n                    client: clientId!,\n                    action: {\n                      kind: \"select match\",\n                      match: (game.actions[1] as GameActionSelectMatch).match,\n                    },\n                  });\n                  setShowDialog(false);\n                  const playMessage = await getServerResponse(\"play response\");\n                  if (playMessage.success) {\n                    updateGame(playMessage.result);\n                  } else {\n                    setShowDialog(true);\n                    addToast(playMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </>\n      );\n    } else if (game.flags.move_animal_9) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Use Animal of September As a Double Junk?\")}\n          </h2>\n          <div className=\"flex justify-center\">\n            <TextButton\n              style={{ minWidth: \"3em\", marginRight: \"2em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"move animal 9\", option: true },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"yes\"))}</span>\n            </TextButton>\n            <TextButton\n              style={{ minWidth: \"3em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"move animal 9\", option: false },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"no\"))}</span>\n            </TextButton>\n          </div>\n        </>\n      );\n    } else if (game.flags.four_of_a_month) {\n      setShowDialog(true);\n      setDialogContent(\n        <>\n          <h2 className=\"font-black text-xl text-gray-800 mb-3\">\n            {t(\"Finish the Game with Four-of-a-Month?\")}\n          </h2>\n          <div className=\"flex justify-center\">\n            <TextButton\n              style={{ minWidth: \"3em\", marginRight: \"2em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"four of a month\", option: true },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"yes\"))}</span>\n            </TextButton>\n            <TextButton\n              style={{ minWidth: \"3em\" }}\n              onClick={async () => {\n                emitToServer(\"play\", {\n                  client: clientId!,\n                  action: { kind: \"four of a month\", option: false },\n                });\n                setShowDialog(false);\n                const playMessage = await getServerResponse(\"play response\");\n                if (playMessage.success) {\n                  updateGame(playMessage.result);\n                } else {\n                  setShowDialog(true);\n                  addToast(playMessage.error, {\n                    appearance: \"error\",\n                    autoDismiss: true,\n                  });\n                }\n              }}\n            >\n              <span>{capitalize(t(\"no\"))}</span>\n            </TextButton>\n          </div>\n        </>\n      );\n    }\n  }, [socket, game, updateGame]);\n\n  const index = game?.players.findIndex((p) => p === clientId) as -1 | 0 | 1;\n  const involved = !!clientId && game?.players.includes(clientId);\n\n  return game === null ? (\n    <div className=\"w-full h-full\">\n      <BlockLoading />\n    </div>\n  ) : (\n    <div className=\"w-full h-full\">\n      <div className=\"fixed z-50\">\n        {involved && (\n          <TextButton\n            size=\"sm\"\n            onClick={async () => {\n              if (!socket) return;\n              if (!clientId) return;\n              socket.emit(\"end game\", { client: clientId });\n              const endGameMessage = await getServerResponse(\n                \"end game response\"\n              );\n              if (!endGameMessage.success) {\n                addToast(endGameMessage.error, {\n                  appearance: \"error\",\n                  autoDismiss: true,\n                });\n              }\n            }}\n          >\n            End Game\n          </TextButton>\n        )}\n      </div>\n      <div className=\"fixed z-30 right-0 top-0\">\n        <IconButton\n          onClick={() => {\n            setShowLogs((s) => !s);\n          }}\n        >\n          {showLogs ? <MdClose /> : <IoIosArrowDown />}\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            i18n.changeLanguage(i18n.language !== \"ko\" ? \"ko\" : \"en\");\n          }}\n        >\n          <MdLanguage />\n        </IconButton>\n      </div>\n      {showLogs && (\n        <div\n          className=\"fixed right-0 top-0 text-xs max-w-md overflow-y-auto z-20 bg-white bg-opacity-75 p-4 rounded-xl\"\n          style={{ maxHeight: \"10rem\" }}\n        >\n          <pre className=\"max-w-md break-all whitespace-pre-wrap\">\n            {game.logs.join(\"\\n\")}\n          </pre>\n        </div>\n      )}\n      <GoStop\n        game={game}\n        player={index === -1 ? null : index}\n        clientId={clientId}\n        roomId={roomId}\n        updateGame={updateGame}\n        {...routeComponentProps}\n      />\n      {showDialog && (\n        <div\n          className=\"w-full h-full flex place-items-center fixed z-10 top-0 left-0\"\n          style={{\n            backgroundColor: \"rgba(0, 0, 0, 0.45)\",\n          }}\n        >\n          <div className=\"p-8 bg-white rounded-2xl w-2/3 text-center m-auto\">\n            {dialogContent}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(RoomGameStarted);\n","import React from \"react\";\nimport { Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"redux-zero/react\";\nimport actions, { ActionTypes } from \"../actions\";\nimport { AppState } from \"../store\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\nimport { BlockLoading } from \"react-loadingg\";\nimport IconButton from \"../components/IconButton\";\nimport { BiHome, BiLogIn, BiLogOut } from \"react-icons/bi\";\nimport { BsPlayFill } from \"react-icons/bs\";\nimport Layout from \"../components/Layout\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport { Room } from \"../types/server\";\nimport { goToMyRoom } from \"../hooks\";\nimport Table from \"../components/Table\";\nimport RoomGameStarted from \"../components/RoomGameStarted\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst Rooms: React.FC<\n  RouteComponentProps<{\n    roomId: string;\n  }> &\n    AppState &\n    ActionTypes\n> = (props) => {\n  const {\n    match,\n    rooms,\n    clientId,\n    updateClientId,\n    roomId,\n    history,\n    updateRoomId,\n  } = props;\n  const { addToast } = useToasts();\n  const room: Room | null =\n    rooms?.find((room) => room.id === match.params.roomId) ?? null;\n\n  return rooms === null ? (\n    <Layout>\n      <BlockLoading />\n    </Layout>\n  ) : !room ? (\n    <Redirect to=\"/\" />\n  ) : !room.gameStarted ? (\n    <Layout>\n      <Header>\n        <div className=\"flex\">\n          <IconButton className=\"mr-4\" onClick={() => history.push(\"/\")}>\n            <BiHome />\n          </IconButton>\n          <TextInput\n            className=\"w-64 my-1\"\n            placeholder=\"Client ID\"\n            value={clientId ?? \"\"}\n            onChange={(event) => {\n              updateClientId(event.target.value);\n            }}\n          />\n          {roomId && (\n            <IconButton\n              className=\"ml-4\"\n              onClick={goToMyRoom(\n                { history, clientId, roomId, rooms, updateRoomId, addToast },\n                false\n              )}\n            >\n              <BiLogIn />\n            </IconButton>\n          )}\n        </div>\n      </Header>\n      <main>\n        <h2 className=\"p-4 font-bold text-3xl text-gray-800 inline-flex\">\n          Room {match.params.roomId}\n          {roomId === match.params.roomId && clientId && (\n            <>\n              <IconButton\n                onClick={async () => {\n                  emitToServer(\"start game\", { client: clientId });\n                  const startGameMessage = await getServerResponse(\n                    \"start game response\"\n                  );\n                  if (!startGameMessage.success) {\n                    addToast(startGameMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n                className=\"ml-4\"\n              >\n                <BsPlayFill />\n              </IconButton>\n              <IconButton\n                onClick={async () => {\n                  emitToServer(\"exit room\", { client: clientId });\n                  const exitRoomMessage = await getServerResponse(\n                    \"exit room response\"\n                  );\n                  if (exitRoomMessage.success) {\n                    setTimeout(() => {\n                      history.replace(\"/\");\n                    }, 300);\n                  } else {\n                    addToast(exitRoomMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n                className=\"ml-4\"\n              >\n                <BiLogOut />\n              </IconButton>\n            </>\n          )}\n          {roomId !== match.params.roomId && clientId && (\n            <>\n              <IconButton\n                onClick={async () => {\n                  emitToServer(\"join room\", {\n                    client: clientId,\n                    room: match.params.roomId,\n                  });\n                  const joinRoomMessage = await getServerResponse(\n                    \"join room response\"\n                  );\n                  if (joinRoomMessage.success) {\n                    updateRoomId(room.id);\n                  } else {\n                    addToast(joinRoomMessage.error, {\n                      appearance: \"error\",\n                      autoDismiss: true,\n                    });\n                  }\n                }}\n                className=\"ml-4\"\n              >\n                <BiLogIn />\n              </IconButton>\n            </>\n          )}\n        </h2>\n\n        <Table.Wrapper>\n          <Table.Head>\n            <Table.Row>\n              <Table.Header>Player ID</Table.Header>\n            </Table.Row>\n          </Table.Head>\n          <Table.Body>\n            {rooms === null ? (\n              <Table.Row>\n                <Table.Data className=\"w-full\" colSpan={3}>\n                  <div className=\"h-24 relative\">\n                    <BlockLoading />\n                  </div>\n                </Table.Data>\n              </Table.Row>\n            ) : (\n              rooms\n                .find((room) => room.id === match.params.roomId)!\n                .players.map((player) => (\n                  <Table.Row key={player}>\n                    <Table.Data className=\"w-1/2\">\n                      <span className=\"text-gray-700 px-6 py-3 flex items-center\">\n                        {player}\n                      </span>\n                    </Table.Data>\n                  </Table.Row>\n                ))\n            )}\n          </Table.Body>\n        </Table.Wrapper>\n      </main>\n    </Layout>\n  ) : (\n    <RoomGameStarted id={match.params.roomId} />\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(Rooms);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"redux-zero/react\";\nimport { BlockLoading } from \"react-loadingg\";\nimport { BiHome, BiLogIn } from \"react-icons/bi\";\nimport { GrOverview } from \"react-icons/gr\";\n\nimport actions, { ActionTypes } from \"../actions\";\nimport { AppState } from \"../store\";\nimport { emitToServer, getServerResponse } from \"../utils/server\";\nimport IconButton from \"../components/IconButton\";\nimport TextInput from \"../components/TextInput\";\nimport Table from \"../components/Table\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { goToMyRoom } from \"../hooks\";\nimport Layout from \"../components/Layout\";\nimport Header from \"../components/Header\";\nimport { useToasts } from \"react-toast-notifications\";\n\ntype MainProps = AppState & ActionTypes;\nconst Main: React.FC<RouteComponentProps & MainProps> = ({\n  history,\n  clientId,\n  roomId,\n  rooms,\n  updateRoomId,\n  updateClientId,\n}) => {\n  const { addToast } = useToasts();\n\n  useAsyncEffect(\n    goToMyRoom(\n      { history, clientId, roomId, rooms, updateRoomId, addToast },\n      true\n    ),\n    [roomId, clientId, history, rooms, updateRoomId]\n  );\n\n  return (\n    <Layout>\n      <Header>\n        <div className=\"flex\">\n          <IconButton className=\"mr-4\" onClick={() => history.push(\"/\")}>\n            <BiHome />\n          </IconButton>\n          <TextInput\n            className=\"w-64 my-1\"\n            placeholder=\"Client ID\"\n            value={clientId ?? \"\"}\n            onChange={(event) => {\n              updateClientId(event.target.value);\n            }}\n          />\n          {roomId && (\n            <IconButton\n              className=\"ml-4\"\n              onClick={goToMyRoom(\n                { history, clientId, roomId, rooms, updateRoomId, addToast },\n                false\n              )}\n            >\n              <BiLogIn />\n            </IconButton>\n          )}\n        </div>\n      </Header>\n      <main>\n        <h2 className=\"p-4 font-bold text-3xl text-gray-800\">Rooms</h2>\n\n        <Table.Wrapper>\n          <Table.Head>\n            <Table.Row>\n              <Table.Header>Room ID</Table.Header>\n              <Table.Header># of Players</Table.Header>\n              <Table.Header></Table.Header>\n            </Table.Row>\n          </Table.Head>\n          <Table.Body>\n            {rooms === null ? (\n              <Table.Row>\n                <Table.Data className=\"w-full\" colSpan={3}>\n                  <div className=\"h-24 relative\">\n                    <BlockLoading />\n                  </div>\n                </Table.Data>\n              </Table.Row>\n            ) : (\n              rooms.map((room) => (\n                <Table.Row key={room.id}>\n                  <Table.Data className=\"w-1/2\">\n                    <span className=\"text-gray-700 px-6 py-3 flex items-center\">\n                      {room.id}\n                    </span>\n                  </Table.Data>\n                  <Table.Data className=\"w-1/4\">\n                    <span className=\"text-gray-700 px-6 py-3 flex items-center\">\n                      {room.players.length}/2\n                    </span>\n                  </Table.Data>\n                  <Table.Data className=\"p-2 flex justify-end\">\n                    <IconButton\n                      onClick={async () => {\n                        if (roomId === room.id) {\n                          history.push(`/rooms/${room.id}`);\n                          return;\n                        }\n                        if (roomId) {\n                          addToast(\"You are already in a different room.\", {\n                            appearance: \"error\",\n                            autoDismiss: true,\n                          });\n                          return;\n                        }\n                        if (!clientId) {\n                          addToast(\"You did not set the clientId yet.\", {\n                            appearance: \"error\",\n                            autoDismiss: true,\n                          });\n                          return;\n                        }\n\n                        emitToServer(\"join room\", {\n                          client: clientId,\n                          room: room.id,\n                        });\n                        const newRoomId = await getServerResponse(\n                          \"join room response\"\n                        );\n                        if (newRoomId.success) {\n                          updateRoomId(room.id);\n                          history.push(`/rooms/${room.id}`);\n                        } else {\n                          addToast(newRoomId.error, {\n                            appearance: \"error\",\n                            autoDismiss: true,\n                          });\n                        }\n                      }}\n                    >\n                      <BiLogIn />\n                    </IconButton>\n                    <IconButton\n                      onClick={() => {\n                        history.push(`/rooms/${room.id}`);\n                      }}\n                    >\n                      <GrOverview />\n                    </IconButton>\n                  </Table.Data>\n                </Table.Row>\n              ))\n            )}\n            <Table.Row>\n              <Table.Data className=\"w-full\" colSpan={3}>\n                <div className=\"h-24 flex items-center justify-center\">\n                  <button\n                    className=\"w-40 bg-white tracking-wide text-gray-800 font-bold rounded border-b-2 border-blue-500 hover:border-blue-600 hover:bg-blue-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center m-auto\"\n                    onClick={async () => {\n                      if (roomId) {\n                        addToast(\"You are already in a different room.\", {\n                          appearance: \"error\",\n                          autoDismiss: true,\n                        });\n                        return;\n                      }\n                      if (!clientId) {\n                        addToast(\"You did not set the clientId yet.\", {\n                          appearance: \"error\",\n                          autoDismiss: true,\n                        });\n                        return;\n                      }\n\n                      emitToServer(\"make room\", { client: clientId });\n                      const newRoomId = await getServerResponse(\n                        \"make room response\"\n                      );\n                      if (newRoomId.success) {\n                        updateRoomId(newRoomId.result.id);\n                        setTimeout(() => {\n                          history.push(`/rooms/${newRoomId.result.id}`);\n                        }, 300);\n                      } else {\n                        addToast(newRoomId.error, {\n                          appearance: \"error\",\n                          autoDismiss: true,\n                        });\n                      }\n                    }}\n                  >\n                    <span className=\"mx-auto\">Make a room</span>\n                  </button>\n                </div>\n              </Table.Data>\n            </Table.Row>\n          </Table.Body>\n        </Table.Wrapper>\n      </main>\n    </Layout>\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(Main);\n","export function assert(condition: boolean, errorMessage?: any) {\n  if (!condition) {\n    throw new Error(errorMessage);\n  }\n}\n","import React from \"react\";\nimport { connect } from \"redux-zero/react\";\nimport actions from \"../actions\";\nimport Layout from \"../components/Layout\";\nimport { AppState } from \"../store\";\n\ntype NotFoundProps = {};\nconst NotFound: React.FC<NotFoundProps> = () => {\n  return (\n    <Layout>\n      <div className=\"flex w-full h-screen text-center place-items-center place-content-center\">\n        <span className=\"text-gray-500 font-bold\" style={{ fontSize: \"10em\" }}>\n          ∄\n        </span>\n      </div>\n    </Layout>\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(NotFound);\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport { connect } from \"redux-zero/react\";\nimport useAsyncEffect from \"use-async-effect\";\n\nimport actions, { ActionTypes } from \"./actions\";\nimport { AppState } from \"./store\";\nimport Rooms from \"./pages/Rooms\";\nimport Main from \"./pages/Main\";\nimport {\n  attachServerListener,\n  emitToServer,\n  getServerResponse,\n  removeServerListener,\n} from \"./utils/server\";\nimport { assert } from \"./utils/test\";\nimport { Message, Result } from \"./types/server\";\nimport { socket } from \"./socket\";\nimport NotFound from \"./pages/NotFound\";\nimport { useToasts } from \"react-toast-notifications\";\n\ntype AppProps = AppState & ActionTypes;\n\nconst App: React.FC<AppProps> = ({\n  clientId,\n  updateClientId,\n  updateRoomId,\n  updateRooms,\n}) => {\n  const { addToast } = useToasts();\n\n  // preload images\n  useEffect(() => {\n    const images = [\n      ...[2, 4, 5, 6, 7, 8, 9, 10, 12].map(\n        (m) => `A${m.toString().padStart(2, \"0\")}`\n      ),\n      ...[1, 3, 8, 11, 12].map((m) => `B${m.toString().padStart(2, \"0\")}`),\n      ...[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n        .map((m) => `J${m.toString().padStart(2, \"0\")}`)\n        .map((s) => [s + \"0\", s + \"1\"])\n        .flat(),\n      ...[\"J110\", \"J111\", \"J112\", \"J120\"],\n      ...[1, 2, 3, 4, 5, 6, 7, 9, 10, 12].map(\n        (m) => `R${m.toString().padStart(2, \"0\")}`\n      ),\n      ...[\"bomb\", \"bonus2\", \"bonus3\", \"hidden\"],\n    ];\n    images.forEach((slug) => {\n      new Image().src = `/images/cards/${slug}.png`;\n    });\n  }, []);\n\n  // server check\n  useAsyncEffect(async () => {\n    if (!socket) return;\n    const welcomeMessage = await getServerResponse(\"connect response\");\n    if (welcomeMessage.success) {\n      try {\n        assert(welcomeMessage.message.split(\" \")[1].slice(0, -1) === socket.id);\n        console.log(\"connected!\");\n      } catch {\n        addToast(\"Socket id does not match\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } else {\n      addToast(welcomeMessage.error, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  }, [socket.connected]);\n\n  // initialize client id from the localStorage\n  useEffect(() => {\n    updateClientId(localStorage.getItem(\"clientId\") ?? \"\");\n  }, [updateClientId]);\n\n  // initialize my room whenever (socket and) clientId changes\n  useAsyncEffect(async () => {\n    if (!clientId) return;\n\n    emitToServer(\"my room\", { client: clientId });\n    const myRoomMessage = await getServerResponse(\"my room response\");\n    if (myRoomMessage.success) {\n      updateRoomId(myRoomMessage.result?.id ?? null);\n    } else {\n      addToast(myRoomMessage.error, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  }, [clientId]);\n\n  useEffect(() => {\n    emitToServer(\"list rooms\", {});\n\n    const listRoomsListener = (\n      message: Result<Message[\"list rooms response\"]>\n    ) => {\n      if (message.success) {\n        updateRooms(message.result);\n      }\n    };\n    attachServerListener(\"list rooms response\", listRoomsListener);\n\n    return () => {\n      removeServerListener(\"list rooms response\", listRoomsListener);\n    };\n  }, [updateRooms]);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/rooms/:roomId\" component={Rooms} />\n        <Route path=\"/rooms\" render={() => <Redirect to=\"/\" />} />\n        <Route exact path=\"/\" render={(props) => <Main {...props} />} />\n        <Route path=\"/\" render={(props) => <NotFound {...props} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default connect<AppState>((s) => s, actions)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import createStore from \"redux-zero\";\nimport { Game } from \"./types/game\";\nimport { Room } from \"./types/server\";\n\nexport interface AppState {\n  clientId: string | null;\n  rooms: Room[] | null;\n  roomId: string | null;\n  game: Game | null;\n}\n\nconst initialState: AppState = {\n  clientId: null,\n  rooms: null,\n  roomId: null,\n  game: null,\n};\n\nconst store = createStore<AppState>(initialState);\nexport default store;\n","import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport { capitalize } from \"./utils/string\";\nimport { cardNameEn, cardNameKo, getMonthName } from \"./utils/card\";\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    debug: process.env.NODE_ENV !== \"production\",\n    interpolation: {\n      format: function (value, format, lng) {\n        if (format === \"uppercase\") return value.toUpperCase();\n        if (format === \"capitalize\") return capitalize(value);\n        if (format === \"card\")\n          return lng === \"ko\" ? cardNameKo(value) : cardNameEn(value);\n        if (format === \"month\")\n          return lng === \"ko\" ? `${parseInt(value)}월` : getMonthName(parseInt(value));\n        return value;\n      },\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { Provider } from \"redux-zero/react\";\nimport store from \"./store\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ToastProvider>\n      <App />\n    </ToastProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}